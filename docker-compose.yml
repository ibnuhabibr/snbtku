version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: snbtku-postgres
    environment:
      POSTGRES_DB: snbtku_dev
      POSTGRES_USER: snbtku_user
      POSTGRES_PASSWORD: snbtku_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init:/docker-entrypoint-initdb.d
    networks:
      - snbtku-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U snbtku_user -d snbtku_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: snbtku-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - snbtku-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: snbtku-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@snbtku.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - snbtku-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  snbtku-network:
    driver: bridge