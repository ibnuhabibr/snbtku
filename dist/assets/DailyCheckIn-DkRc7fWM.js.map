{"version":3,"file":"DailyCheckIn-DkRc7fWM.js","sources":["../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/components/GamificationSystem.tsx","../../src/components/QuestTracker.tsx","../../src/components/gamification/DailyCheckIn.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import React, { useState } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { \n  Trophy, \n  Star, \n  Flame, \n  Target, \n  Crown, \n  Zap, \n  CheckCircle,\n  Users,\n  BookOpen,\n  Brain,\n  Sparkles,\n  X\n} from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface Quest {\n  id: string;\n  title: string;\n  description: string;\n  type: 'daily' | 'weekly' | 'achievement';\n  progress: number;\n  maxProgress: number;\n  xpReward: number;\n  coinReward: number;\n  completed: boolean;\n  icon: React.ComponentType<any>;\n  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n  timeLeft?: string;\n}\n\ninterface Achievement {\n  id: string;\n  title: string;\n  description: string;\n  icon: string;\n  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n  unlocked: boolean;\n  unlockedDate?: string;\n  progress: number;\n  maxProgress: number;\n  xpReward: number;\n  category: 'study' | 'social' | 'streak' | 'score' | 'special' | 'speed' | 'accuracy' | 'dedication' | 'improvement' | 'endurance' | 'mastery' | 'volume' | 'competition';\n}\n\ninterface Reward {\n  id: string;\n  name: string;\n  description: string;\n  cost: number;\n  type: 'avatar' | 'badge' | 'theme' | 'boost' | 'special';\n  icon: string;\n  rarity: 'common' | 'rare' | 'epic' | 'legendary';\n  owned: boolean;\n  limited?: boolean;\n  timeLeft?: string;\n}\n\ninterface UserStats {\n  level: number;\n  xp: number;\n  xpToNext: number;\n  coins: number;\n  streak: number;\n  totalQuestions: number;\n  correctAnswers: number;\n  studyTime: number;\n  rank: number;\n  badges: number;\n}\n\ninterface GamificationSystemProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst GamificationSystem: React.FC<GamificationSystemProps> = ({ isOpen, onClose }) => {\n  const [activeTab, setActiveTab] = useState('quests');\n  const [showRewardAnimation, setShowRewardAnimation] = useState(false);\n  const [newReward, setNewReward] = useState<string>('');\n\n  // Mock user stats\n  const [userStats, setUserStats] = useState<UserStats>({\n    level: 15,\n    xp: 3250,\n    xpToNext: 4000,\n    coins: 1850,\n    streak: 12,\n    totalQuestions: 2847,\n    correctAnswers: 2203,\n    studyTime: 145, // hours\n    rank: 156,\n    badges: 18\n  });\n\n  // Daily Quests\n  const [dailyQuests] = useState<Quest[]>([\n    {\n      id: '1',\n      title: 'Pagi yang Produktif',\n      description: 'Selesaikan 5 soal sebelum jam 10 pagi',\n      type: 'daily',\n      progress: 3,\n      maxProgress: 5,\n      xpReward: 100,\n      coinReward: 50,\n      completed: false,\n      timeLeft: '4j 30m',\n      icon: BookOpen,\n      rarity: 'common'\n    },\n    {\n      id: '2',\n      title: 'Streak Master',\n      description: 'Pertahankan streak belajar selama 3 hari',\n      type: 'daily',\n      progress: 2,\n      maxProgress: 3,\n      xpReward: 200,\n      coinReward: 100,\n      completed: false,\n      timeLeft: '8j 15m',\n      icon: Flame,\n      rarity: 'rare'\n    },\n    {\n      id: '3',\n      title: 'Quick Learner',\n      description: 'Jawab 10 soal dengan benar dalam 15 menit',\n      type: 'daily',\n      progress: 6,\n      maxProgress: 10,\n      xpReward: 150,\n      coinReward: 75,\n      completed: false,\n      timeLeft: '6j 20m',\n      icon: Zap,\n      rarity: 'common'\n    },\n    {\n      id: '4',\n      title: 'Night Owl',\n      description: 'Belajar setelah jam 9 malam',\n      type: 'daily',\n      progress: 0,\n      maxProgress: 1,\n      xpReward: 120,\n      coinReward: 60,\n      completed: false,\n      timeLeft: '12j 45m',\n      icon: Star,\n      rarity: 'common'\n    },\n    {\n      id: '5',\n      title: 'Focus Mode',\n      description: 'Selesaikan 20 soal tanpa salah',\n      type: 'daily',\n      progress: 8,\n      maxProgress: 20,\n      xpReward: 300,\n      coinReward: 150,\n      completed: false,\n      timeLeft: '5j 10m',\n      icon: Target,\n      rarity: 'rare'\n    }\n  ]);\n\n  // Weekly Quests\n  const [weeklyQuests] = useState<Quest[]>([\n    {\n      id: '6',\n      title: 'Speed Demon',\n      description: 'Selesaikan 50 soal dalam waktu kurang dari 1 jam',\n      type: 'weekly',\n      progress: 25,\n      maxProgress: 50,\n      xpReward: 500,\n      coinReward: 250,\n      completed: false,\n      timeLeft: '3h 45m',\n      icon: Zap,\n      rarity: 'rare'\n    },\n    {\n      id: '7',\n      title: 'Perfect Score',\n      description: 'Dapatkan skor 100% di try out',\n      type: 'weekly',\n      progress: 0,\n      maxProgress: 1,\n      xpReward: 1000,\n      coinReward: 500,\n      completed: false,\n      timeLeft: '2h 30m',\n      icon: Crown,\n      rarity: 'legendary'\n    },\n    {\n      id: '8',\n      title: 'Marathon Runner',\n      description: 'Selesaikan 100 soal dalam seminggu',\n      type: 'weekly',\n      progress: 45,\n      maxProgress: 100,\n      xpReward: 800,\n      coinReward: 400,\n      completed: false,\n      timeLeft: '4d 12h',\n      icon: Trophy,\n      rarity: 'epic'\n    },\n    {\n      id: '9',\n      title: 'Subject Master',\n      description: 'Raih skor 90%+ di 3 mata pelajaran berbeda',\n      type: 'weekly',\n      progress: 1,\n      maxProgress: 3,\n      xpReward: 600,\n      coinReward: 300,\n      completed: false,\n      timeLeft: '5d 8h',\n      icon: Brain,\n      rarity: 'rare'\n    },\n    {\n      id: '10',\n      title: 'Consistency King',\n      description: 'Belajar setiap hari selama seminggu',\n      type: 'weekly',\n      progress: 4,\n      maxProgress: 7,\n      xpReward: 700,\n      coinReward: 350,\n      completed: false,\n      timeLeft: '3d 16h',\n      icon: Flame,\n      rarity: 'epic'\n    },\n    {\n      id: '11',\n      title: 'Social Learner',\n      description: 'Bergabung dengan 5 study group',\n      type: 'weekly',\n      progress: 2,\n      maxProgress: 5,\n      xpReward: 400,\n      coinReward: 200,\n      completed: false,\n      timeLeft: '6d 4h',\n      icon: Users,\n      rarity: 'uncommon'\n    }\n  ]);\n\n  // Achievements\n  const [achievements] = useState<Achievement[]>([\n    {\n      id: '1',\n      title: 'First Steps',\n      description: 'Selesaikan 10 soal pertama',\n      icon: '🎯',\n      rarity: 'common',\n      unlocked: true,\n      unlockedDate: '2024-01-15',\n      progress: 10,\n      maxProgress: 10,\n      xpReward: 50,\n      category: 'study'\n    },\n    {\n      id: '2',\n      title: 'Week Warrior',\n      description: 'Belajar 7 hari berturut-turut',\n      icon: '🔥',\n      rarity: 'uncommon',\n      unlocked: true,\n      unlockedDate: '2024-01-22',\n      progress: 7,\n      maxProgress: 7,\n      xpReward: 200,\n      category: 'streak'\n    },\n    {\n      id: '3',\n      title: 'Math Genius',\n      description: 'Skor 95%+ di Penalaran Matematika',\n      icon: '🧮',\n      rarity: 'rare',\n      unlocked: true,\n      unlockedDate: '2024-02-01',\n      progress: 1,\n      maxProgress: 1,\n      xpReward: 300,\n      category: 'score'\n    },\n    {\n      id: '4',\n      title: 'Social Butterfly',\n      description: 'Bantu 50 teman dengan menjawab pertanyaan',\n      icon: '🦋',\n      rarity: 'epic',\n      unlocked: false,\n      progress: 23,\n      maxProgress: 50,\n      xpReward: 500,\n      category: 'social'\n    },\n    {\n      id: '5',\n      title: 'Legend',\n      description: 'Mencapai level 50',\n      icon: '👑',\n      rarity: 'legendary',\n      unlocked: false,\n      progress: 15,\n      maxProgress: 50,\n      xpReward: 2000,\n      category: 'special'\n    },\n    {\n      id: '6',\n      title: 'Speed Runner',\n      description: 'Selesaikan 20 soal dalam 10 menit',\n      icon: '💨',\n      rarity: 'rare',\n      unlocked: false,\n      progress: 0,\n      maxProgress: 1,\n      xpReward: 400,\n      category: 'speed'\n    },\n    {\n      id: '7',\n      title: 'Perfect Streak',\n      description: 'Jawab 50 soal berturut-turut dengan benar',\n      icon: '⭐',\n      rarity: 'epic',\n      unlocked: false,\n      progress: 12,\n      maxProgress: 50,\n      xpReward: 800,\n      category: 'accuracy'\n    },\n    {\n      id: '8',\n      title: 'Night Scholar',\n      description: 'Belajar setelah jam 10 malam selama 10 hari',\n      icon: '🌙',\n      rarity: 'uncommon',\n      unlocked: false,\n      progress: 3,\n      maxProgress: 10,\n      xpReward: 250,\n      category: 'dedication'\n    },\n    {\n      id: '9',\n      title: 'Early Bird',\n      description: 'Belajar sebelum jam 7 pagi selama 7 hari',\n      icon: '🌅',\n      rarity: 'uncommon',\n      unlocked: false,\n      progress: 1,\n      maxProgress: 7,\n      xpReward: 300,\n      category: 'dedication'\n    },\n    {\n      id: '10',\n      title: 'Quiz Master',\n      description: 'Raih skor perfect di 10 quiz berbeda',\n      icon: '🏆',\n      rarity: 'epic',\n      unlocked: false,\n      progress: 4,\n      maxProgress: 10,\n      xpReward: 1000,\n      category: 'score'\n    },\n    {\n      id: '11',\n      title: 'Comeback King',\n      description: 'Tingkatkan skor try out sebesar 50 poin',\n      icon: '📈',\n      rarity: 'rare',\n      unlocked: false,\n      progress: 0,\n      maxProgress: 1,\n      xpReward: 600,\n      category: 'improvement'\n    },\n    {\n      id: '12',\n      title: 'Study Buddy',\n      description: 'Ajak 10 teman bergabung ke platform',\n      icon: '👥',\n      rarity: 'epic',\n      unlocked: false,\n      progress: 2,\n      maxProgress: 10,\n      xpReward: 1200,\n      category: 'social'\n    },\n    {\n      id: '13',\n      title: 'Marathon Master',\n      description: 'Belajar selama 5 jam dalam sehari',\n      icon: '⏰',\n      rarity: 'rare',\n      unlocked: false,\n      progress: 0,\n      maxProgress: 1,\n      xpReward: 500,\n      category: 'endurance'\n    },\n    {\n      id: '14',\n      title: 'Subject Expert',\n      description: 'Raih skor 95%+ di semua mata pelajaran',\n      icon: '🎓',\n      rarity: 'legendary',\n      unlocked: false,\n      progress: 2,\n      maxProgress: 5,\n      xpReward: 1500,\n      category: 'mastery'\n    },\n    {\n      id: '15',\n      title: 'Consistency Champion',\n      description: 'Belajar 30 hari berturut-turut',\n      icon: '🔥',\n      rarity: 'legendary',\n      unlocked: false,\n      progress: 12,\n      maxProgress: 30,\n      xpReward: 2500,\n      category: 'streak'\n    },\n    {\n      id: '16',\n      title: 'Question Collector',\n      description: 'Selesaikan 1000 soal',\n      icon: '📚',\n      rarity: 'epic',\n      unlocked: false,\n      progress: 456,\n      maxProgress: 1000,\n      xpReward: 1000,\n      category: 'volume'\n    },\n    {\n      id: '17',\n      title: 'Leaderboard King',\n      description: 'Masuk top 10 leaderboard selama 7 hari',\n      icon: '👑',\n      rarity: 'legendary',\n      unlocked: false,\n      progress: 0,\n      maxProgress: 7,\n      xpReward: 3000,\n      category: 'competition'\n    },\n    {\n      id: '18',\n      title: 'Helper Hero',\n      description: 'Bantu 100 teman dengan menjawab pertanyaan',\n      icon: '🦸‍♂️',\n      rarity: 'legendary',\n      unlocked: false,\n      progress: 23,\n      maxProgress: 100,\n      xpReward: 2000,\n      category: 'social'\n    }\n  ]);\n\n  // Rewards Store\n  const [rewards, setRewards] = useState<Reward[]>([\n    // Avatars - Karakter Terkenal\n    {\n      id: '1',\n      name: 'Spiderman Avatar',\n      description: 'Avatar Spiderman dengan kostum merah-biru ikonik',\n      cost: 800,\n      type: 'avatar',\n      icon: '🕷️',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '2',\n      name: 'Batman Avatar',\n      description: 'Avatar Batman dengan jubah hitam legendaris',\n      cost: 850,\n      type: 'avatar',\n      icon: '🦇',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '3',\n      name: 'Superman Avatar',\n      description: 'Avatar Superman dengan logo S di dada',\n      cost: 900,\n      type: 'avatar',\n      icon: '🦸‍♂️',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '4',\n      name: 'Iron Man Avatar',\n      description: 'Avatar Iron Man dengan armor teknologi tinggi',\n      cost: 950,\n      type: 'avatar',\n      icon: '🤖',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '5',\n      name: 'Wonder Woman Avatar',\n      description: 'Avatar Wonder Woman dengan tiara emas',\n      cost: 800,\n      type: 'avatar',\n      icon: '👸',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '6',\n      name: 'Captain America Avatar',\n      description: 'Avatar Captain America dengan perisai vibranium',\n      cost: 850,\n      type: 'avatar',\n      icon: '🛡️',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '7',\n      name: 'Thor Avatar',\n      description: 'Avatar Thor dengan palu Mjolnir',\n      cost: 1000,\n      type: 'avatar',\n      icon: '⚡',\n      rarity: 'legendary',\n      owned: false\n    },\n    {\n      id: '8',\n      name: 'Hulk Avatar',\n      description: 'Avatar Hulk dengan kekuatan super',\n      cost: 900,\n      type: 'avatar',\n      icon: '💚',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '9',\n      name: 'Black Panther Avatar',\n      description: 'Avatar Black Panther dari Wakanda',\n      cost: 950,\n      type: 'avatar',\n      icon: '🐾',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '10',\n      name: 'Doctor Strange Avatar',\n      description: 'Avatar Doctor Strange dengan mantel levitasi',\n      cost: 1200,\n      type: 'avatar',\n      icon: '🔮',\n      rarity: 'legendary',\n      owned: false\n    },\n    \n    // Power-ups\n    {\n      id: '6',\n      name: 'XP Boost 2x',\n      description: 'Gandakan XP selama 1 jam',\n      cost: 200,\n      type: 'boost',\n      icon: '⚡',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '7',\n      name: 'XP Boost 3x',\n      description: 'Triple XP selama 30 menit',\n      cost: 400,\n      type: 'boost',\n      icon: '🔥',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '8',\n      name: 'Coin Magnet',\n      description: 'Dapatkan 50% lebih banyak coins selama 2 jam',\n      cost: 300,\n      type: 'boost',\n      icon: '🧲',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '9',\n      name: 'Lucky Charm',\n      description: 'Peluang double reward 25% selama 1 hari',\n      cost: 600,\n      type: 'boost',\n      icon: '🍀',\n      rarity: 'rare',\n      owned: false\n    },\n    {\n      id: '10',\n      name: 'Time Freeze',\n      description: 'Hentikan timer selama try out (1x pakai)',\n      cost: 500,\n      type: 'boost',\n      icon: '⏰',\n      rarity: 'rare',\n      owned: false\n    },\n    \n    // Badges\n    {\n      id: '11',\n      name: 'Bronze Scholar',\n      description: 'Badge perunggu untuk pemula',\n      cost: 150,\n      type: 'badge',\n      icon: '🥉',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '12',\n      name: 'Silver Scholar',\n      description: 'Badge perak untuk yang berdedikasi',\n      cost: 400,\n      type: 'badge',\n      icon: '🥈',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '13',\n      name: 'Golden Scholar',\n      description: 'Badge emas untuk yang berprestasi',\n      cost: 1000,\n      type: 'badge',\n      icon: '🥇',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '14',\n      name: 'Diamond Scholar',\n      description: 'Badge berlian untuk master SNBT',\n      cost: 2500,\n      type: 'badge',\n      icon: '💎',\n      rarity: 'legendary',\n      owned: false\n    },\n    {\n      id: '15',\n      name: 'Speed Demon',\n      description: 'Badge untuk yang cepat menyelesaikan soal',\n      cost: 800,\n      type: 'badge',\n      icon: '💨',\n      rarity: 'rare',\n      owned: false\n    },\n    {\n      id: '16',\n      name: 'Perfect Score',\n      description: 'Badge untuk yang mendapat nilai sempurna',\n      cost: 1200,\n      type: 'badge',\n      icon: '⭐',\n      rarity: 'epic',\n      owned: false\n    },\n    \n    // Themes\n    {\n      id: '17',\n      name: 'Dark Theme Premium',\n      description: 'Tema gelap premium dengan efek khusus',\n      cost: 300,\n      type: 'theme',\n      icon: '🌙',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '18',\n      name: 'Ocean Theme',\n      description: 'Tema biru laut yang menenangkan',\n      cost: 350,\n      type: 'theme',\n      icon: '🌊',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '19',\n      name: 'Forest Theme',\n      description: 'Tema hijau hutan yang segar',\n      cost: 350,\n      type: 'theme',\n      icon: '🌲',\n      rarity: 'common',\n      owned: false\n    },\n    {\n      id: '20',\n      name: 'Sunset Theme',\n      description: 'Tema sunset dengan gradasi indah',\n      cost: 500,\n      type: 'theme',\n      icon: '🌅',\n      rarity: 'rare',\n      owned: false\n    },\n    {\n      id: '21',\n      name: 'Galaxy Theme',\n      description: 'Tema galaksi dengan efek bintang',\n      cost: 800,\n      type: 'theme',\n      icon: '🌌',\n      rarity: 'epic',\n      owned: false\n    },\n    \n    // Special Items\n    {\n      id: '22',\n      name: 'Legendary Crown',\n      description: 'Mahkota legendaris untuk top player',\n      cost: 2500,\n      type: 'special',\n      icon: '👑',\n      rarity: 'legendary',\n      owned: false,\n      limited: true,\n      timeLeft: '2h 30m'\n    },\n    {\n      id: '23',\n      name: 'Magic Wand',\n      description: 'Tongkat ajaib dengan efek sparkle',\n      cost: 1500,\n      type: 'special',\n      icon: '🪄',\n      rarity: 'legendary',\n      owned: false\n    },\n    {\n      id: '24',\n      name: 'Golden Wings',\n      description: 'Sayap emas untuk avatar',\n      cost: 1800,\n      type: 'special',\n      icon: '🪶',\n      rarity: 'legendary',\n      owned: false\n    },\n    {\n      id: '25',\n      name: 'Crystal Orb',\n      description: 'Bola kristal dengan efek cahaya',\n      cost: 1200,\n      type: 'special',\n      icon: '🔮',\n      rarity: 'epic',\n      owned: false\n    },\n    {\n      id: '26',\n      name: 'Phoenix Feather',\n      description: 'Bulu phoenix yang langka',\n      cost: 2200,\n      type: 'special',\n      icon: '🔥',\n      rarity: 'legendary',\n      owned: false\n    }\n  ]);\n\n\n\n\n\n  const purchaseReward = (rewardId: string) => {\n    const reward = rewards.find(r => r.id === rewardId);\n    if (reward && userStats.coins >= reward.cost && !reward.owned) {\n      setUserStats(prev => ({ ...prev, coins: prev.coins - reward.cost }));\n      setRewards(prev => prev.map(r => \n        r.id === rewardId ? { ...r, owned: true } : r\n      ));\n      setNewReward(`Berhasil membeli ${reward.name}!`);\n      setShowRewardAnimation(true);\n      setTimeout(() => setShowRewardAnimation(false), 3000);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.95 }}\n        animate={{ opacity: 1, scale: 1 }}\n        exit={{ opacity: 0, scale: 0.95 }}\n        className=\"bg-background rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\"\n      >\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-2xl font-bold\">Sistem Gamifikasi</h2>\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n        \n        <div className=\"p-6 space-y-6\">\n          {/* User Stats Overview */}\n          <Card className=\"bg-gradient-to-r from-primary/10 to-purple-500/10\">\n            <CardContent className=\"p-6\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-primary\">{userStats.level}</div>\n                  <div className=\"text-sm text-muted-foreground\">Level</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-yellow-500\">{userStats.coins}</div>\n                  <div className=\"text-sm text-muted-foreground\">Coins</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-orange-500\">{userStats.streak}</div>\n                  <div className=\"text-sm text-muted-foreground\">Streak</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-green-500\">{userStats.badges}</div>\n                  <div className=\"text-sm text-muted-foreground\">Badges</div>\n                </div>\n              </div>\n              <div className=\"mt-4\">\n                <div className=\"flex justify-between text-sm mb-2\">\n                  <span>XP Progress</span>\n                  <span>{userStats.xp}/{userStats.xpToNext}</span>\n                </div>\n                <Progress value={(userStats.xp / userStats.xpToNext) * 100} className=\"h-2\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Tabs */}\n          <Tabs value={activeTab} onValueChange={setActiveTab}>\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"quests\">Quests</TabsTrigger>\n              <TabsTrigger value=\"achievements\">Achievements</TabsTrigger>\n              <TabsTrigger value=\"rewards\">Rewards</TabsTrigger>\n            </TabsList>\n\n            {/* Quests Tab */}\n            <TabsContent value=\"quests\" className=\"space-y-4\">\n              <div className=\"grid gap-4\">\n                <h3 className=\"text-lg font-semibold\">Daily Quests</h3>\n                {dailyQuests.map((quest) => {\n                  const IconComponent = quest.icon;\n                  return (\n                    <Card key={quest.id} className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <IconComponent className=\"h-8 w-8 text-primary\" />\n                          <div>\n                            <h4 className=\"font-medium\">{quest.title}</h4>\n                            <p className=\"text-sm text-muted-foreground\">{quest.description}</p>\n                            <div className=\"flex items-center gap-2 mt-1\">\n                              <Progress value={(quest.progress / quest.maxProgress) * 100} className=\"h-2 w-32\" />\n                              <span className=\"text-xs\">{quest.progress}/{quest.maxProgress}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm font-medium text-yellow-500\">+{quest.coinReward} coins</div>\n                          <div className=\"text-sm text-muted-foreground\">+{quest.xpReward} XP</div>\n                          {quest.timeLeft && <div className=\"text-xs text-red-500\">{quest.timeLeft}</div>}\n                        </div>\n                      </div>\n                    </Card>\n                  );\n                })}\n\n                <h3 className=\"text-lg font-semibold mt-6\">Weekly Quests</h3>\n                {weeklyQuests.map((quest) => {\n                  const IconComponent = quest.icon;\n                  return (\n                    <Card key={quest.id} className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <IconComponent className=\"h-8 w-8 text-primary\" />\n                          <div>\n                            <h4 className=\"font-medium\">{quest.title}</h4>\n                            <p className=\"text-sm text-muted-foreground\">{quest.description}</p>\n                            <div className=\"flex items-center gap-2 mt-1\">\n                              <Progress value={(quest.progress / quest.maxProgress) * 100} className=\"h-2 w-32\" />\n                              <span className=\"text-xs\">{quest.progress}/{quest.maxProgress}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm font-medium text-yellow-500\">+{quest.coinReward} coins</div>\n                          <div className=\"text-sm text-muted-foreground\">+{quest.xpReward} XP</div>\n                          {quest.timeLeft && <div className=\"text-xs text-red-500\">{quest.timeLeft}</div>}\n                        </div>\n                      </div>\n                    </Card>\n                  );\n                })}\n              </div>\n            </TabsContent>\n\n            {/* Achievements Tab */}\n            <TabsContent value=\"achievements\" className=\"space-y-4\">\n              <div className=\"grid gap-4\">\n                {achievements.map((achievement) => (\n                  <Card key={achievement.id} className={`p-4 ${achievement.unlocked ? 'bg-green-50 border-green-200' : ''}`}>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"text-2xl\">{achievement.icon}</div>\n                        <div>\n                          <h4 className=\"font-medium flex items-center gap-2\">\n                            {achievement.title}\n                            {achievement.unlocked && <CheckCircle className=\"h-4 w-4 text-green-500\" />}\n                          </h4>\n                          <p className=\"text-sm text-muted-foreground\">{achievement.description}</p>\n                          {!achievement.unlocked && (\n                            <div className=\"flex items-center gap-2 mt-1\">\n                              <Progress value={(achievement.progress / achievement.maxProgress) * 100} className=\"h-2 w-32\" />\n                              <span className=\"text-xs\">{achievement.progress}/{achievement.maxProgress}</span>\n                            </div>\n                          )}\n                          {achievement.unlocked && achievement.unlockedDate && (\n                            <p className=\"text-xs text-green-600\">Unlocked: {achievement.unlockedDate}</p>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <Badge variant={achievement.rarity === 'legendary' ? 'default' : 'secondary'}>\n                          {achievement.rarity}\n                        </Badge>\n                        <div className=\"text-sm text-muted-foreground mt-1\">+{achievement.xpReward} XP</div>\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            </TabsContent>\n\n            {/* Rewards Tab */}\n            <TabsContent value=\"rewards\" className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {rewards.map((reward) => (\n                  <Card key={reward.id} className=\"p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"text-2xl\">{reward.icon}</div>\n                        <div>\n                          <h4 className=\"font-medium\">{reward.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">{reward.description}</p>\n                          <div className=\"flex items-center gap-2 mt-1\">\n                            <Badge variant={reward.rarity === 'legendary' ? 'default' : 'secondary'}>\n                              {reward.rarity}\n                            </Badge>\n                            {reward.limited && <Badge variant=\"destructive\">Limited</Badge>}\n                          </div>\n                          {reward.timeLeft && (\n                            <p className=\"text-xs text-red-500 mt-1\">Expires in: {reward.timeLeft}</p>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-lg font-bold text-yellow-500 mb-2\">{reward.cost} coins</div>\n                        <Button \n                          size=\"sm\" \n                          disabled={reward.owned || userStats.coins < reward.cost}\n                          onClick={() => purchaseReward(reward.id)}\n                        >\n                          {reward.owned ? 'Owned' : 'Buy'}\n                        </Button>\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            </TabsContent>\n          </Tabs>\n\n          {/* Reward Animation */}\n          <AnimatePresence>\n            {showRewardAnimation && (\n              <motion.div\n                initial={{ opacity: 0, y: -50, scale: 0.8 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: -50, scale: 0.8 }}\n                className=\"fixed top-20 left-1/2 transform -translate-x-1/2 z-50\"\n              >\n                <Card className=\"bg-gradient-to-r from-yellow-400 to-orange-500 text-white shadow-2xl\">\n                  <CardContent className=\"p-4 text-center\">\n                    <Sparkles className=\"h-6 w-6 mx-auto mb-2\" />\n                    <p className=\"font-bold\">{newReward}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default GamificationSystem;","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { \n  Target, \n  Clock, \n  Star, \n  Trophy, \n  CheckCircle, \n  Circle,\n  Gift,\n  Zap,\n  BookOpen,\n  Users,\n  Flame,\n  TrendingUp,\n  Crown\n} from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface Quest {\n  id: string;\n  title: string;\n  description: string;\n  type: 'daily' | 'weekly' | 'special';\n  progress: number;\n  maxProgress: number;\n  reward: {\n    xp: number;\n    coins: number;\n    items?: string[];\n  };\n  completed: boolean;\n  timeLeft?: string;\n  icon: React.ComponentType<any>;\n  difficulty: 'easy' | 'medium' | 'hard';\n}\n\ninterface QuestTrackerProps {\n  className?: string;\n  showHeader?: boolean;\n  maxQuests?: number;\n}\n\nconst QuestTracker: React.FC<QuestTrackerProps> = ({ \n  className = '', \n  showHeader = true, \n  maxQuests = 3 \n}) => {\n  const quests: Quest[] = [\n    {\n      id: '1',\n      title: 'Latihan Harian',\n      description: 'Selesaikan 20 soal hari ini',\n      type: 'daily',\n      progress: 20,\n      maxProgress: 20,\n      reward: { xp: 100, coins: 50 },\n      completed: true,\n      timeLeft: '8j 30m',\n      icon: BookOpen,\n      difficulty: 'easy'\n    },\n    {\n      id: '2',\n      title: 'Streak Master',\n      description: 'Pertahankan streak belajar 7 hari',\n      type: 'weekly',\n      progress: 7,\n      maxProgress: 7,\n      reward: { xp: 500, coins: 200, items: ['Badge Streak Master'] },\n      completed: true,\n      timeLeft: '2h 15m',\n      icon: Flame,\n      difficulty: 'medium'\n    },\n    {\n      id: '3',\n      title: 'Try Out Champion',\n      description: 'Raih skor 85+ di try out',\n      type: 'special',\n      progress: 1,\n      maxProgress: 1,\n      reward: { xp: 1000, coins: 500, items: ['Avatar Champion', 'Badge Elite'] },\n      completed: true,\n      icon: Trophy,\n      difficulty: 'hard'\n    },\n    {\n      id: '4',\n      title: 'Social Learner',\n      description: 'Bergabung dengan 3 study group',\n      type: 'weekly',\n      progress: 1,\n      maxProgress: 3,\n      reward: { xp: 300, coins: 150 },\n      completed: false,\n      timeLeft: '4h 45m',\n      icon: Users,\n      difficulty: 'medium'\n    },\n    {\n      id: '5',\n      title: 'Speed Runner',\n      description: 'Selesaikan 50 soal dalam 1 jam',\n      type: 'daily',\n      progress: 0,\n      maxProgress: 50,\n      reward: { xp: 200, coins: 100, items: ['Badge Speed Runner'] },\n      completed: false,\n      timeLeft: '12h 20m',\n      icon: Zap,\n      difficulty: 'hard'\n    },\n    {\n      id: '6',\n      title: 'Perfect Score',\n      description: 'Dapatkan nilai 100 di try out',\n      type: 'special',\n      progress: 0,\n      maxProgress: 1,\n      reward: { xp: 1500, coins: 750, items: ['Badge Perfect', 'Avatar Gold'] },\n      completed: false,\n      timeLeft: '6d 12h',\n      icon: Star,\n      difficulty: 'hard'\n    },\n    {\n      id: '7',\n      title: 'Early Bird',\n      description: 'Login sebelum jam 7 pagi selama 5 hari',\n      type: 'weekly',\n      progress: 2,\n      maxProgress: 5,\n      reward: { xp: 400, coins: 200, items: ['Badge Early Bird'] },\n      completed: false,\n      timeLeft: '3d 8h',\n      icon: Clock,\n      difficulty: 'medium'\n    },\n    {\n      id: '8',\n      title: 'Knowledge Seeker',\n      description: 'Baca 10 materi pembelajaran',\n      type: 'daily',\n      progress: 3,\n      maxProgress: 10,\n      reward: { xp: 150, coins: 75 },\n      completed: false,\n      timeLeft: '18h 45m',\n      icon: BookOpen,\n      difficulty: 'easy'\n    },\n    {\n      id: '9',\n      title: 'Consistency King',\n      description: 'Login selama 30 hari berturut-turut',\n      type: 'special',\n      progress: 15,\n      maxProgress: 30,\n      reward: { xp: 2000, coins: 1000, items: ['Crown Avatar', 'Badge Legendary'] },\n      completed: false,\n      timeLeft: '15d',\n      icon: Crown,\n      difficulty: 'hard'\n    },\n    {\n      id: '10',\n      title: 'Quiz Master',\n      description: 'Jawab 100 soal dengan benar',\n      type: 'weekly',\n      progress: 45,\n      maxProgress: 100,\n      reward: { xp: 600, coins: 300, items: ['Badge Quiz Master'] },\n      completed: false,\n      timeLeft: '5d 2h',\n      icon: Target,\n      difficulty: 'medium'\n    },\n    {\n      id: '11',\n      title: 'Friend Collector',\n      description: 'Tambahkan 5 teman baru',\n      type: 'weekly',\n      progress: 1,\n      maxProgress: 5,\n      reward: { xp: 250, coins: 125 },\n      completed: false,\n      timeLeft: '6d 14h',\n      icon: Users,\n      difficulty: 'easy'\n    },\n    {\n      id: '12',\n      title: 'Night Owl',\n      description: 'Belajar setelah jam 10 malam selama 3 hari',\n      type: 'weekly',\n      progress: 0,\n      maxProgress: 3,\n      reward: { xp: 300, coins: 150, items: ['Badge Night Owl'] },\n      completed: false,\n      timeLeft: '4d 6h',\n      icon: Clock,\n      difficulty: 'medium'\n    },\n    {\n      id: '13',\n      title: 'Improvement Tracker',\n      description: 'Tingkatkan skor try out sebesar 50 poin',\n      type: 'special',\n      progress: 25,\n      maxProgress: 50,\n      reward: { xp: 800, coins: 400, items: ['Badge Improver'] },\n      completed: false,\n      timeLeft: '10d',\n      icon: TrendingUp,\n      difficulty: 'medium'\n    },\n    {\n      id: '14',\n      title: 'Marathon Runner',\n      description: 'Belajar selama 3 jam tanpa henti',\n      type: 'daily',\n      progress: 1,\n      maxProgress: 3,\n      reward: { xp: 300, coins: 150, items: ['Badge Marathon'] },\n      completed: false,\n      timeLeft: '20h 30m',\n      icon: Zap,\n      difficulty: 'hard'\n    },\n    {\n      id: '15',\n      title: 'Subject Master',\n      description: 'Selesaikan semua materi dalam 1 mata pelajaran',\n      type: 'special',\n      progress: 8,\n      maxProgress: 12,\n      reward: { xp: 1200, coins: 600, items: ['Badge Subject Master', 'Avatar Scholar'] },\n      completed: false,\n      timeLeft: '7d',\n      icon: BookOpen,\n      difficulty: 'hard'\n    }\n  ];\n\n  // Sort quests: completed quests first, then by progress percentage\n  const sortedQuests = [...quests].sort((a, b) => {\n    if (a.completed && !b.completed) return -1;\n    if (!a.completed && b.completed) return 1;\n    if (a.completed && b.completed) return 0;\n    \n    const aProgress = (a.progress / a.maxProgress) * 100;\n    const bProgress = (b.progress / b.maxProgress) * 100;\n    return bProgress - aProgress;\n  });\n\n  const activeQuests = sortedQuests.slice(0, maxQuests);\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'daily': return 'bg-blue-100 text-blue-700';\n      case 'weekly': return 'bg-purple-100 text-purple-700';\n      case 'special': return 'bg-yellow-100 text-yellow-700';\n      default: return 'bg-gray-100 text-gray-700';\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'bg-green-100 text-green-700';\n      case 'medium': return 'bg-orange-100 text-orange-700';\n      case 'hard': return 'bg-red-100 text-red-700';\n      default: return 'bg-gray-100 text-gray-700';\n    }\n  };\n\n  const handleClaimReward = async (questId: string) => {\n    try {\n      const response = await fetch(`/api/quests/${questId}/claim`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        \n        // Show success notification\n        console.log('Reward claimed successfully:', data);\n        \n        // You can add toast notification here if available\n        // toast({\n        //   title: \"Reward Claimed!\",\n        //   description: `${data.message} (+${data.reward.coins} coins, +${data.reward.xp} XP)`,\n        // });\n        \n        // Refresh quests or update local state\n        window.location.reload(); // Simple refresh for now\n      } else {\n        const error = await response.json();\n        console.error('Failed to claim reward:', error.error);\n      }\n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    }\n  };\n\n  return (\n    <Card className={className}>\n      {showHeader && (\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Target className=\"h-5 w-5 text-primary\" />\n            Quest Tracker\n          </CardTitle>\n        </CardHeader>\n      )}\n      <CardContent className=\"space-y-4\">\n        {activeQuests.map((quest) => {\n          const IconComponent = quest.icon;\n          const progressPercentage = (quest.progress / quest.maxProgress) * 100;\n          \n          return (\n            <motion.div\n              key={quest.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className={`relative p-3 sm:p-5 border rounded-xl transition-all duration-300 hover:shadow-md ${\n                quest.completed \n                  ? 'bg-gradient-to-r from-green-50 to-emerald-50 border-green-200 shadow-sm' \n                  : 'hover:bg-gradient-to-r hover:from-blue-50/50 hover:to-indigo-50/50 border-border hover:border-blue-200'\n              }`}\n            >\n              {/* Quest Header */}\n              <div className=\"flex flex-col sm:flex-row sm:items-start sm:justify-between mb-3 sm:mb-4 gap-3\">\n                <div className=\"flex items-start gap-3 flex-1\">\n                  <div className={`p-2 sm:p-3 rounded-xl shadow-sm flex-shrink-0 ${\n                    quest.completed \n                      ? 'bg-green-100 text-green-600 shadow-green-100' \n                      : 'bg-gradient-to-br from-primary/10 to-primary/20 text-primary shadow-primary/10'\n                  }`}>\n                    <IconComponent className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 mb-2\">\n                      <h4 className=\"font-semibold text-sm sm:text-base text-foreground\">{quest.title}</h4>\n                      <div className=\"flex items-center gap-1.5 flex-wrap\">\n                        <Badge \n                          variant=\"secondary\" \n                          className={`${getTypeColor(quest.type)} text-xs px-2 py-0.5 sm:px-2.5 sm:py-1 font-medium rounded-full`}\n                        >\n                          {quest.type}\n                        </Badge>\n                        <Badge \n                          variant=\"outline\" \n                          className={`${getDifficultyColor(quest.difficulty)} text-xs px-2 py-0.5 sm:px-2.5 sm:py-1 font-medium rounded-full border-2`}\n                        >\n                          {quest.difficulty}\n                        </Badge>\n                      </div>\n                    </div>\n                    <p className=\"text-xs sm:text-sm text-muted-foreground mb-2 sm:mb-3 leading-relaxed\">\n                      {quest.description}\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex flex-row sm:flex-col items-center sm:items-end justify-between sm:justify-start gap-2 sm:ml-4\">\n                  {quest.timeLeft && !quest.completed && (\n                    <div className=\"flex items-center gap-1.5 px-2 py-1 sm:px-2.5 bg-orange-50 text-orange-600 rounded-full text-xs font-medium\">\n                      <Clock className=\"h-3 w-3 sm:h-3.5 sm:w-3.5\" />\n                      <span className=\"hidden sm:inline\">{quest.timeLeft}</span>\n                      <span className=\"sm:hidden\">{quest.timeLeft.split(' ')[0]}</span>\n                    </div>\n                  )}\n                  \n                  {quest.completed ? (\n                    <Button \n                      size=\"sm\" \n                      className=\"bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white shadow-md hover:shadow-lg transition-all duration-200 px-3 py-1.5 sm:px-4 sm:py-2 text-xs sm:text-sm\"\n                      onClick={() => handleClaimReward(quest.id)}\n                    >\n                      <Gift className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-1.5\" />\n                      <span className=\"hidden sm:inline\">Claim Reward</span>\n                      <span className=\"sm:hidden\">Claim</span>\n                    </Button>\n                  ) : (\n                    <div className=\"flex items-center gap-1\">\n                      {progressPercentage === 100 ? (\n                        <div className=\"p-1 bg-green-100 rounded-full\">\n                          <CheckCircle className=\"h-4 w-4 sm:h-5 sm:w-5 text-green-500\" />\n                        </div>\n                      ) : (\n                        <div className=\"p-1 bg-gray-100 rounded-full\">\n                          <Circle className=\"h-4 w-4 sm:h-5 sm:w-5 text-muted-foreground\" />\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              {/* Progress Section */}\n              <div className=\"mb-3 sm:mb-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-xs sm:text-sm font-medium text-foreground\">Progress</span>\n                  <span className=\"text-xs sm:text-sm font-semibold text-primary\">\n                    {quest.progress}/{quest.maxProgress}\n                  </span>\n                </div>\n                <Progress \n                  value={progressPercentage} \n                  className=\"h-2 sm:h-3 bg-gray-100 rounded-full overflow-hidden\" \n                />\n                <div className=\"text-xs text-muted-foreground mt-1 text-right\">\n                  {Math.round(progressPercentage)}% completed\n                </div>\n              </div>\n              \n              {/* Rewards Section */}\n              <div className=\"bg-gradient-to-r from-yellow-50/50 to-orange-50/50 rounded-lg p-2 sm:p-3 border border-yellow-100\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n                  <span className=\"text-xs sm:text-sm font-medium text-foreground\">Rewards</span>\n                  <div className=\"flex items-center gap-2 sm:gap-4 flex-wrap\">\n                    <div className=\"flex items-center gap-1 sm:gap-1.5 px-2 py-0.5 sm:px-2.5 sm:py-1 bg-yellow-100 text-yellow-700 rounded-full\">\n                      <Star className=\"h-3 w-3 sm:h-3.5 sm:w-3.5\" />\n                      <span className=\"text-xs font-semibold\">{quest.reward.xp} XP</span>\n                    </div>\n                    <div className=\"flex items-center gap-1 sm:gap-1.5 px-2 py-0.5 sm:px-2.5 sm:py-1 bg-amber-100 text-amber-700 rounded-full\">\n                      <div className=\"h-3 w-3 sm:h-3.5 sm:w-3.5 rounded-full bg-yellow-400 shadow-sm\" />\n                      <span className=\"text-xs font-semibold\">{quest.reward.coins}</span>\n                      <span className=\"hidden sm:inline text-xs font-semibold\">coins</span>\n                    </div>\n                    {quest.reward.items && (\n                      <div className=\"flex items-center gap-1 sm:gap-1.5 px-2 py-0.5 sm:px-2.5 sm:py-1 bg-purple-100 text-purple-700 rounded-full\">\n                        <Gift className=\"h-3 w-3 sm:h-3.5 sm:w-3.5\" />\n                        <span className=\"text-xs font-semibold\">{quest.reward.items.length}</span>\n                        <span className=\"hidden sm:inline text-xs font-semibold\">item</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Completion indicator */}\n              {quest.completed && (\n                <div className=\"absolute top-2 left-2 sm:top-3 sm:left-3\">\n                  <div className=\"bg-green-500 text-white px-1.5 py-0.5 sm:px-2 sm:py-1 rounded-full text-xs font-medium shadow-md\">\n                    <span className=\"sm:hidden\">✓</span>\n                    <span className=\"hidden sm:inline\">✓ Completed</span>\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          );\n        })}\n        \n        {activeQuests.length === 0 && (\n          <div className=\"text-center py-8 text-muted-foreground\">\n            <Target className=\"h-12 w-12 mx-auto mb-3 opacity-50\" />\n            <p className=\"text-sm\">Tidak ada quest aktif saat ini</p>\n            <p className=\"text-xs\">Quest baru akan tersedia setiap hari!</p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default QuestTracker;","import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Calendar, Coins, Flame, Gift } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuthStore } from '@/stores/authStore';\nimport { getAuthHeaders } from '@/stores/authStore';\n\ninterface CheckInStatus {\n  canClaim: boolean;\n  currentStreak: number;\n  lastCheckIn: string | null;\n  nextClaimAt: string;\n  weeklyProgress: {\n    currentDay: number; // 1-7, resets weekly\n    weeklyRewards: {\n      day: number;\n      coins: number;\n      xp: number;\n      claimed: boolean;\n      unlocked: boolean;\n    }[];\n  };\n}\n\ninterface CheckInResponse {\n  success: boolean;\n  reward: {\n    coins: number;\n    xp: number;\n    bonus?: {\n      type: string;\n      amount: number;\n    };\n  };\n  streak: number;\n  userStats: {\n    level: number;\n    xp: number;\n    coins: number;\n    dailyStreak: number;\n  };\n  message: string;\n}\n\nexport const DailyCheckIn: React.FC = () => {\n  const [status, setStatus] = useState<CheckInStatus | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [claiming, setClaiming] = useState(false);\n  const { toast } = useToast();\n  const { updateUserStats } = useAuthStore();\n\n  useEffect(() => {\n    fetchCheckInStatus();\n  }, []);\n\n  const fetchCheckInStatus = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/rewards/daily-status', {\n        headers: getAuthHeaders(),\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setStatus(data);\n      }\n    } catch (error) {\n      console.error('Failed to fetch check-in status:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCheckIn = async () => {\n    if (!status?.canClaim) return;\n\n    try {\n      setClaiming(true);\n      const response = await fetch('/api/rewards/daily-claim', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...getAuthHeaders(),\n        },\n      });\n\n      if (response.ok) {\n        const data: CheckInResponse = await response.json();\n        \n        // Update user stats in store\n        updateUserStats({\n          level: data.userStats.level,\n          xp: data.userStats.xp,\n          coins: data.userStats.coins,\n          dailyStreak: data.userStats.dailyStreak,\n        });\n\n        // Show success toast\n        toast({\n          title: \"Check-in berhasil!\",\n          description: `${data.message} (+${data.reward.coins} koin, +${data.reward.xp} XP)`,\n        });\n\n        // Refresh status\n        await fetchCheckInStatus();\n      } else {\n        const error = await response.json();\n        toast({\n          title: \"Gagal check-in\",\n          description: error.message || \"Terjadi kesalahan\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error('Failed to claim daily reward:', error);\n      toast({\n        title: \"Gagal check-in\",\n        description: \"Terjadi kesalahan jaringan\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setClaiming(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Calendar className=\"h-5 w-5\" />\n            Check-in Harian\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"animate-pulse\">\n            <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!status) {\n    return null;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Calendar className=\"h-5 w-5\" />\n          Check-in Harian\n        </CardTitle>\n        <CardDescription>\n          Dapatkan hadiah setiap hari dengan check-in!\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Streak Display */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Flame className=\"h-4 w-4 text-orange-500\" />\n            <span className=\"text-sm font-medium\">Streak Saat Ini</span>\n          </div>\n          <Badge variant=\"secondary\" className=\"text-orange-600\">\n            {status.currentStreak} hari\n          </Badge>\n        </div>\n\n        {/* Weekly Progress */}\n        {status.weeklyProgress && (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <h4 className=\"text-sm font-medium\">Progress Mingguan</h4>\n              <Badge variant=\"secondary\">\n                Hari {status.weeklyProgress.currentDay}/7\n              </Badge>\n            </div>\n            \n            {/* Weekly Rewards Grid */}\n            <div className=\"grid grid-cols-7 gap-2\">\n              {status.weeklyProgress.weeklyRewards.map((reward) => {\n                const isToday = reward.day === status.weeklyProgress.currentDay;\n                const canClaim = reward.unlocked && !reward.claimed && status.canClaim && isToday;\n                \n                return (\n                  <div\n                    key={reward.day}\n                    className={`relative p-3 rounded-lg border-2 text-center transition-all ${\n                      reward.claimed\n                        ? 'bg-green-50 border-green-200'\n                        : canClaim\n                        ? 'bg-gradient-to-br from-yellow-50 to-orange-50 border-yellow-300 shadow-md'\n                        : reward.unlocked\n                        ? 'bg-blue-50 border-blue-200'\n                        : 'bg-gray-50 border-gray-200 opacity-60'\n                    }`}\n                  >\n                    {/* Day Number */}\n                    <div className={`text-xs font-bold mb-1 ${\n                      reward.claimed\n                        ? 'text-green-600'\n                        : canClaim\n                        ? 'text-orange-600'\n                        : reward.unlocked\n                        ? 'text-blue-600'\n                        : 'text-gray-400'\n                    }`}>\n                      Hari {reward.day}\n                    </div>\n                    \n                    {/* Reward Info */}\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center justify-center gap-1\">\n                        <Coins className=\"h-3 w-3 text-yellow-500\" />\n                        <span className=\"text-xs font-medium\">{reward.coins}</span>\n                      </div>\n                      <div className=\"flex items-center justify-center gap-1\">\n                        <span className=\"text-blue-500 text-xs\">⚡</span>\n                        <span className=\"text-xs font-medium\">{reward.xp}</span>\n                      </div>\n                    </div>\n                    \n                    {/* Status Indicator */}\n                    {reward.claimed && (\n                      <div className=\"absolute -top-1 -right-1 bg-green-500 text-white rounded-full w-4 h-4 flex items-center justify-center\">\n                        <span className=\"text-xs\">✓</span>\n                      </div>\n                    )}\n                    \n                    {isToday && !reward.claimed && (\n                      <div className=\"absolute -top-1 -right-1 bg-orange-500 text-white rounded-full w-4 h-4 flex items-center justify-center animate-pulse\">\n                        <span className=\"text-xs\">!</span>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Today's Special Reward */}\n            {status.weeklyProgress.weeklyRewards.find(r => r.day === status.weeklyProgress.currentDay) && (\n              <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 p-4 rounded-lg border border-blue-200\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <Gift className=\"h-4 w-4 text-purple-600\" />\n                  <span className=\"text-sm font-medium text-purple-800\">\n                    Hadiah Hari Ini (Hari {status.weeklyProgress.currentDay})\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-4 text-sm\">\n                  <div className=\"flex items-center gap-1\">\n                    <Coins className=\"h-4 w-4 text-yellow-600\" />\n                    <span>{status.weeklyProgress.weeklyRewards.find(r => r.day === status.weeklyProgress.currentDay)?.coins} koin</span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-blue-600\">⚡</span>\n                    <span>{status.weeklyProgress.weeklyRewards.find(r => r.day === status.weeklyProgress.currentDay)?.xp} XP</span>\n                  </div>\n                  {status.weeklyProgress.currentDay === 7 && (\n                    <Badge variant=\"outline\" className=\"text-xs bg-gradient-to-r from-yellow-100 to-orange-100\">\n                      🎉 Bonus Mingguan!\n                    </Badge>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Check-in Button */}\n        <Button\n          onClick={handleCheckIn}\n          disabled={!status.canClaim || claiming}\n          className=\"w-full\"\n          size=\"lg\"\n        >\n          {claiming ? (\n            \"Mengklaim...\"\n          ) : status.canClaim ? (\n            \"Check-in Sekarang\"\n          ) : (\n            \"Sudah Check-in Hari Ini\"\n          )}\n        </Button>\n\n        {status.lastCheckIn && (\n          <p className=\"text-xs text-gray-500 text-center\">\n            Terakhir check-in: {new Date(status.lastCheckIn).toLocaleDateString('id-ID')}\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};"],"names":["PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","root","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","contains","removeChild","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","React.useEffect","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","has","isEveryExitComplete","isExitComplete","GamificationSystem","isOpen","onClose","activeTab","setActiveTab","showRewardAnimation","setShowRewardAnimation","newReward","setNewReward","userStats","setUserStats","level","xp","xpToNext","coins","streak","totalQuestions","correctAnswers","studyTime","rank","badges","dailyQuests","title","description","type","progress","maxProgress","xpReward","coinReward","completed","timeLeft","icon","BookOpen","rarity","Flame","Zap","Star","Target","weeklyQuests","Crown","Trophy","Brain","Users","achievements","unlocked","unlockedDate","category","rewards","setRewards","name","cost","owned","limited","className","jsxs","motion","div","opacity","scale","animate","exit","Button","variant","onClick","X","Card","CardContent","Progress","Tabs","onValueChange","TabsList","TabsTrigger","TabsContent","quest","IconComponent","achievement","CheckCircle","Badge","reward","disabled","rewardId","find","r","prev","setTimeout","purchaseReward","y","Sparkles","QuestTracker","showHeader","maxQuests","activeQuests","difficulty","items","Clock","TrendingUp","sort","a","b","aProgress","slice","getTypeColor","getDifficultyColor","CardHeader","CardTitle","progressPercentage","split","async","questId","response","fetch","method","headers","Authorization","localStorage","getItem","ok","json","window","location","reload","error","handleClaimReward","Gift","Circle","Math","round","DailyCheckIn","status","setStatus","loading","setLoading","claiming","setClaiming","toast","useToast","updateUserStats","useAuthStore","useEffect","fetchCheckInStatus","getAuthHeaders","data","Calendar","CardDescription","currentStreak","weeklyProgress","currentDay","weeklyRewards","isToday","day","canClaim","claimed","Coins","_a","_b","dailyStreak","message","lastCheckIn","Date","toLocaleDateString"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}