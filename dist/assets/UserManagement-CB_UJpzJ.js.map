{"version":3,"file":"UserManagement-CB_UJpzJ.js","sources":["../../src/pages/admin/UserManagement.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { \n  Search,\n  // Filter, // Removed unused import\n  UserPlus,\n  Edit,\n  Trash2,\n  Eye,\n  // Download, // Removed unused import\n  // Mail, // Removed unused import\n  // Phone, // Removed unused import\n  // Calendar, // Removed unused import\n  // Trophy, // Removed unused import\n  // Target, // Removed unused import\n  // BookOpen, // Removed unused import\n  // Clock, // Removed unused import\n  // MoreHorizontal, // Removed unused import\n  // Shield, // Removed unused import\n  // ShieldCheck, // Removed unused import\n  Ban,\n  CheckCircle,\n  // MoreVertical, // Removed unused import\n  // UserCheck, // Removed unused import\n  // UserX // Removed unused import\n} from \"lucide-react\";\n// import { Link } from \"react-router-dom\"; // Removed unused import\nimport AdminNavigation from \"@/components/AdminNavigation\";\nimport { useAdmin } from '../../hooks/useAdmin';\nimport { adminService } from '../../services/adminService';\n\ninterface User {\n  id: string;\n  full_name: string;\n  email: string;\n  role: string;\n  is_active: boolean;\n  created_at: string;\n  last_login_at?: string;\n}\n\nconst UserManagement = () => {\n  const { isAdmin, isSuperAdmin } = useAdmin();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filterRole, setFilterRole] = useState(\"all\");\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    total: 0\n  });\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setLoading(true);\n        const params: any = {\n          page: pagination.page,\n          limit: pagination.limit\n        };\n        if (filterRole !== 'all') params.role = filterRole;\n        if (filterStatus !== 'all') params.status = filterStatus;\n        \n        const data = await adminService.getUsers(params);\n        setUsers(data.users);\n        setPagination(prev => ({\n          ...prev,\n          total: data.total\n        }));\n      } catch (error) {\n        console.error('Failed to fetch users:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (isAdmin) {\n      fetchUsers();\n    }\n  }, [isAdmin, pagination.page, pagination.limit, filterRole, filterStatus, searchQuery]);\n\n  if (!isAdmin) {\n    return null;\n  }\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case 'admin':\n      case 'super_admin':\n        return 'bg-purple-100 text-purple-800 border-purple-200';\n      default:\n        return 'bg-green-100 text-green-800 border-green-200';\n    }\n  };\n\n  const getStatusColor = (isActive: boolean) => {\n    return isActive \n      ? \"bg-green-100 text-green-800\" \n      : \"bg-red-100 text-red-800\";\n  };\n\n  const handleRoleChange = async (userId: string, newRole: string) => {\n    if (!isSuperAdmin) {\n      alert('Only super admin can change user roles');\n      return;\n    }\n\n    try {\n      await adminService.updateUserRole(userId, newRole);\n      setUsers(users.map(user => \n        user.id === userId ? { ...user, role: newRole } : user\n      ));\n    } catch (error) {\n      console.error('Failed to update user role:', error);\n      alert('Failed to update user role');\n    }\n  };\n\n  const handleStatusChange = async (userId: string, isActive: boolean) => {\n    try {\n      await adminService.updateUserStatus(userId, isActive);\n      setUsers(users.map(user => \n        user.id === userId ? { ...user, is_active: isActive } : user\n      ));\n    } catch (error) {\n      console.error('Failed to update user status:', error);\n      alert('Failed to update user status');\n    }\n  };\n\n  const filteredUsers = users.filter(user => {\n    const matchesSearch = user.full_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         user.email.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesRole = filterRole === 'all' || user.role === filterRole;\n    const matchesStatus = filterStatus === 'all' || \n                         (filterStatus === 'active' && user.is_active) ||\n                         (filterStatus === 'inactive' && !user.is_active);\n    \n    return matchesSearch && matchesRole && matchesStatus;\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <AdminNavigation />\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 pt-24 md:pt-20\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">User Management</h1>\n          <p className=\"mt-2 text-gray-600\">Manage users, roles, and permissions</p>\n        </div>\n\n        {/* Filters */}\n        <Card className=\"mb-6\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                  <Input\n                    placeholder=\"Search users...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10\"\n                  />\n                </div>\n              </div>\n              \n              <Select value={filterRole} onValueChange={setFilterRole}>\n                <SelectTrigger className=\"w-full sm:w-48\">\n                  <SelectValue placeholder=\"Filter by role\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Roles</SelectItem>\n                  <SelectItem value=\"student\">Student</SelectItem>\n                  <SelectItem value=\"admin\">Admin</SelectItem>\n                  <SelectItem value=\"super_admin\">Super Admin</SelectItem>\n                </SelectContent>\n              </Select>\n              \n              <Select value={filterStatus} onValueChange={setFilterStatus}>\n                <SelectTrigger className=\"w-full sm:w-48\">\n                  <SelectValue placeholder=\"Filter by status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Status</SelectItem>\n                  <SelectItem value=\"active\">Active</SelectItem>\n                  <SelectItem value=\"inactive\">Inactive</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Users Table */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <span>Users ({filteredUsers.length})</span>\n              <Button>\n                <UserPlus className=\"h-4 w-4 mr-2\" />\n                Add User\n              </Button>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {loading ? (\n              <div className=\"flex justify-center py-8\">\n                <div className=\"text-gray-500\">Loading users...</div>\n              </div>\n            ) : filteredUsers.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                No users found\n              </div>\n            ) : (\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>User</TableHead>\n                    <TableHead>Role</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Joined</TableHead>\n                    <TableHead>Last Login</TableHead>\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredUsers.map((user) => (\n                    <TableRow key={user.id}>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-3\">\n                          <Avatar className=\"h-8 w-8\">\n                            <AvatarFallback className=\"bg-blue-100 text-blue-600\">\n                              {getInitials(user.full_name)}\n                            </AvatarFallback>\n                          </Avatar>\n                          <div>\n                            <div className=\"font-medium text-gray-900\">{user.full_name}</div>\n                            <div className=\"text-sm text-gray-500\">{user.email}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        {isSuperAdmin ? (\n                          <Select \n                            value={user.role} \n                            onValueChange={(value) => handleRoleChange(user.id, value)}\n                          >\n                            <SelectTrigger className=\"w-32\">\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"student\">Student</SelectItem>\n                              <SelectItem value=\"admin\">Admin</SelectItem>\n                              <SelectItem value=\"super_admin\">Super Admin</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        ) : (\n                          <Badge className={getRoleColor(user.role)}>\n                            {user.role.replace('_', ' ').toUpperCase()}\n                          </Badge>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleStatusChange(user.id, !user.is_active)}\n                          className={`${getStatusColor(user.is_active)} hover:opacity-80`}\n                        >\n                          {user.is_active ? (\n                            <><CheckCircle className=\"h-3 w-3 mr-1\" />Active</>\n                          ) : (\n                            <><Ban className=\"h-3 w-3 mr-1\" />Inactive</>\n                          )}\n                        </Button>\n                      </TableCell>\n                      <TableCell className=\"text-sm text-gray-500\">\n                        {new Date(user.created_at).toLocaleDateString()}\n                      </TableCell>\n                      <TableCell className=\"text-sm text-gray-500\">\n                        {user.last_login_at \n                          ? new Date(user.last_login_at).toLocaleDateString()\n                          : 'Never'\n                        }\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-2\">\n                          <Button variant=\"ghost\" size=\"sm\">\n                            <Eye className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\">\n                            <Edit className=\"h-4 w-4\" />\n                          </Button>\n                          <Button variant=\"ghost\" size=\"sm\" className=\"text-red-600 hover:text-red-700\">\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default UserManagement;"],"names":["UserManagement","isAdmin","isSuperAdmin","useAdmin","searchQuery","setSearchQuery","useState","filterRole","setFilterRole","filterStatus","setFilterStatus","users","setUsers","loading","setLoading","pagination","setPagination","page","limit","total","useEffect","async","params","role","status","data","adminService","getUsers","prev","error","fetchUsers","getRoleColor","filteredUsers","filter","user","matchesSearch","full_name","toLowerCase","includes","email","matchesRole","matchesStatus","is_active","jsxs","className","children","jsx","AdminNavigation","Card","CardContent","Search","Input","placeholder","value","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","CardHeader","CardTitle","length","Button","UserPlus","Table","TableHeader","TableRow","TableHead","TableBody","map","TableCell","Avatar","AvatarFallback","name","split","n","join","toUpperCase","userId","newRole","updateUserRole","id","alert","handleRoleChange","Badge","replace","variant","size","onClick","isActive","updateUserStatus","handleStatusChange","Fragment","CheckCircle","Ban","Date","created_at","toLocaleDateString","last_login_at","Eye","Edit","Trash2"],"mappings":"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"}