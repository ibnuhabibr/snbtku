{"version":3,"file":"PracticeSession-BXZ7K15L.js","sources":["../../src/pages/PracticeSession.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  ArrowLeft,\n  CheckCircle,\n  X,\n  ChevronLeft,\n  ChevronRight,\n  AlertCircle,\n  Eye\n} from 'lucide-react';\nimport Navigation from '@/components/Navigation';\n\ninterface Question {\n  id: string;\n  text: string;\n  options: {\n    id: string;\n    text: string;\n    isCorrect: boolean;\n  }[];\n  explanation: string;\n}\n\ninterface PracticeSessionData {\n  id: string;\n  title: string;\n  description: string;\n  duration: string;\n  questionCount: number;\n  difficulty: 'Mudah' | 'Sedang' | 'Sulit';\n  questions: Question[];\n}\n\ninterface QuestionProgress {\n  questionId: string;\n  selectedAnswer: string;\n  isAnswered: boolean;\n  isChecked: boolean;\n  isCorrect: boolean;\n}\n\n// Extended sample data with more questions\nconst sampleQuestions: Question[] = [\n  {\n    id: '1',\n    text: 'Manakah dari berikut ini yang merupakan contoh penalaran deduktif?',\n    options: [\n      { id: 'a', text: 'Semua burung memiliki sayap. Elang adalah burung. Maka elang memiliki sayap.', isCorrect: true },\n      { id: 'b', text: 'Saya melihat 5 angsa putih, jadi semua angsa berwarna putih.', isCorrect: false },\n      { id: 'c', text: 'Cuaca hari ini cerah, kemungkinan besok juga cerah.', isCorrect: false },\n      { id: 'd', text: 'Kebanyakan siswa suka matematika, jadi semua siswa suka matematika.', isCorrect: false }\n    ],\n    explanation: 'Penalaran deduktif dimulai dari premis umum menuju kesimpulan khusus. Contoh yang benar adalah \"Semua burung memiliki sayap. Elang adalah burung. Maka elang memiliki sayap.\"'\n  },\n  {\n    id: '2',\n    text: 'Jika semua A adalah B, dan semua B adalah C, maka dapat disimpulkan bahwa:',\n    options: [\n      { id: 'a', text: 'Semua A adalah C', isCorrect: true },\n      { id: 'b', text: 'Semua C adalah A', isCorrect: false },\n      { id: 'c', text: 'Beberapa A adalah C', isCorrect: false },\n      { id: 'd', text: 'Tidak ada A yang C', isCorrect: false }\n    ],\n    explanation: 'Ini adalah contoh silogisme. Jika A⊆B dan B⊆C, maka A⊆C (semua A adalah C).'\n  },\n  {\n    id: '3',\n    text: 'Dalam sebuah kelas, 60% siswa suka matematika, 40% suka fisika, dan 20% suka keduanya. Berapa persen siswa yang tidak suka matematika maupun fisika?',\n    options: [\n      { id: 'a', text: '20%', isCorrect: true },\n      { id: 'b', text: '30%', isCorrect: false },\n      { id: 'c', text: '40%', isCorrect: false },\n      { id: 'd', text: '50%', isCorrect: false }\n    ],\n    explanation: 'Menggunakan diagram Venn: Siswa yang suka minimal satu = 60% + 40% - 20% = 80%. Jadi yang tidak suka keduanya = 100% - 80% = 20%.'\n  },\n  {\n    id: '4',\n    text: 'Manakah pernyataan yang logis benar berdasarkan premis: \"Semua mahasiswa rajin. Budi adalah mahasiswa.\"',\n    options: [\n      { id: 'a', text: 'Budi rajin', isCorrect: true },\n      { id: 'b', text: 'Budi tidak rajin', isCorrect: false },\n      { id: 'c', text: 'Budi mungkin rajin', isCorrect: false },\n      { id: 'd', text: 'Tidak dapat disimpulkan', isCorrect: false }\n    ],\n    explanation: 'Berdasarkan silogisme: Premis mayor \"Semua mahasiswa rajin\", premis minor \"Budi adalah mahasiswa\", maka kesimpulan \"Budi rajin\".'\n  },\n  {\n    id: '5',\n    text: 'Jika \"Tidak ada ikan yang bisa terbang\" dan \"Semua burung bisa terbang\", maka:',\n    options: [\n      { id: 'a', text: 'Tidak ada ikan yang merupakan burung', isCorrect: true },\n      { id: 'b', text: 'Semua burung adalah ikan', isCorrect: false },\n      { id: 'c', text: 'Beberapa ikan adalah burung', isCorrect: false },\n      { id: 'd', text: 'Semua yang terbang adalah burung', isCorrect: false }\n    ],\n    explanation: 'Karena ikan tidak bisa terbang dan burung bisa terbang, maka tidak mungkin ada ikan yang merupakan burung.'\n  },\n  {\n    id: '6',\n    text: 'Dalam deret: 2, 6, 18, 54, ..., berapakah angka selanjutnya?',\n    options: [\n      { id: 'a', text: '162', isCorrect: true },\n      { id: 'b', text: '108', isCorrect: false },\n      { id: 'c', text: '216', isCorrect: false },\n      { id: 'd', text: '144', isCorrect: false }\n    ],\n    explanation: 'Pola deret: setiap angka dikalikan 3. 2×3=6, 6×3=18, 18×3=54, 54×3=162.'\n  },\n  {\n    id: '7',\n    text: 'Jika P → Q benar dan Q salah, maka P adalah:',\n    options: [\n      { id: 'a', text: 'Salah', isCorrect: true },\n      { id: 'b', text: 'Benar', isCorrect: false },\n      { id: 'c', text: 'Tidak dapat ditentukan', isCorrect: false },\n      { id: 'd', text: 'Benar atau salah', isCorrect: false }\n    ],\n    explanation: 'Dalam logika, jika implikasi P → Q benar dan Q salah, maka P harus salah. Karena jika P benar dan Q salah, maka P → Q akan salah.'\n  },\n  {\n    id: '8',\n    text: 'Manakah yang merupakan contoh penalaran induktif?',\n    options: [\n      { id: 'a', text: 'Matahari terbit dari timur selama 30 hari berturut-turut, jadi matahari selalu terbit dari timur', isCorrect: true },\n      { id: 'b', text: 'Semua manusia fana. Socrates manusia. Jadi Socrates fana.', isCorrect: false },\n      { id: 'c', text: 'Jika hujan, jalanan basah. Hujan turun. Jadi jalanan basah.', isCorrect: false },\n      { id: 'd', text: 'Semua segitiga memiliki tiga sisi. ABC adalah segitiga. Jadi ABC memiliki tiga sisi.', isCorrect: false }\n    ],\n    explanation: 'Penalaran induktif berangkat dari observasi khusus menuju kesimpulan umum. Mengamati matahari terbit dari timur berulang kali lalu menyimpulkan pola umum adalah contoh penalaran induktif.'\n  },\n  {\n    id: '9',\n    text: 'Dalam diagram Venn, jika himpunan A dan B tidak berpotongan, maka:',\n    options: [\n      { id: 'a', text: 'A ∩ B = ∅', isCorrect: true },\n      { id: 'b', text: 'A ∪ B = ∅', isCorrect: false },\n      { id: 'c', text: 'A ⊆ B', isCorrect: false },\n      { id: 'd', text: 'B ⊆ A', isCorrect: false }\n    ],\n    explanation: 'Jika dua himpunan tidak berpotongan (disjoint), maka irisan mereka adalah himpunan kosong (A ∩ B = ∅).'\n  },\n  {\n    id: '10',\n    text: 'Jika \"Semua dokter pintar\" dan \"Beberapa orang pintar kaya\", maka dapat disimpulkan:',\n    options: [\n      { id: 'a', text: 'Tidak dapat disimpulkan apapun tentang dokter dan kekayaan', isCorrect: true },\n      { id: 'b', text: 'Semua dokter kaya', isCorrect: false },\n      { id: 'c', text: 'Beberapa dokter kaya', isCorrect: false },\n      { id: 'd', text: 'Tidak ada dokter yang kaya', isCorrect: false }\n    ],\n    explanation: 'Dari premis yang diberikan, kita tidak bisa menyimpulkan hubungan pasti antara dokter dan kekayaan karena tidak semua orang pintar kaya.'\n  }\n];\n\nconst PracticeSession: React.FC = () => {\n  const { subtestId, topicId } = useParams<{ subtestId: string; topicId: string }>();\n  // const navigate = useNavigate(); // Removed unused variable\n  \n  // State for current question and progress\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<string>('');\n  const [isAnswerChecked, setIsAnswerChecked] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  \n  // Progress tracking\n  const [questionProgress, setQuestionProgress] = useState<{ [key: string]: QuestionProgress }>({});\n  \n  const sessionData: PracticeSessionData = {\n    id: topicId || 'default',\n    title: 'Penalaran Umum - Logika Dasar',\n    description: 'Latihan soal penalaran logika dan analisis',\n    duration: 'Unlimited',\n    questionCount: sampleQuestions.length,\n    difficulty: 'Sedang',\n    questions: sampleQuestions\n  };\n\n  const currentQuestion = sessionData.questions[currentQuestionIndex];\n  const progressKey = `practice_${subtestId}_${topicId}`;\n\n  // Load progress from localStorage on component mount\n  useEffect(() => {\n    const savedProgress = localStorage.getItem(progressKey);\n    if (savedProgress) {\n      const parsed = JSON.parse(savedProgress);\n      setQuestionProgress(parsed.questionProgress || {});\n      \n      // Find the last answered question\n      const lastAnsweredIndex = Math.max(\n        0,\n        ...Object.values(parsed.questionProgress || {})\n          .map((progress: any, index) => progress.isChecked ? index : -1)\n      );\n      \n      if (lastAnsweredIndex >= 0) {\n        setCurrentQuestionIndex(Math.min(lastAnsweredIndex + 1, sessionData.questions.length - 1));\n      }\n    }\n  }, [progressKey, sessionData.questions.length]);\n\n  // Load current question state\n  useEffect(() => {\n    const currentProgress = currentQuestion?.id ? questionProgress[currentQuestion.id] : undefined;\n    if (currentProgress) {\n      setSelectedAnswer(currentProgress.selectedAnswer || '');\n      setIsAnswerChecked(currentProgress.isChecked || false);\n      setShowExplanation(currentProgress.isChecked || false);\n    } else {\n      setSelectedAnswer('');\n      setIsAnswerChecked(false);\n      setShowExplanation(false);\n    }\n  }, [currentQuestionIndex, questionProgress, currentQuestion?.id]);\n\n  // Save progress to localStorage\n  const saveProgress = (updatedProgress: { [key: string]: QuestionProgress }) => {\n    const progressData = {\n      questionProgress: updatedProgress,\n      lastUpdated: new Date().toISOString(),\n      currentIndex: currentQuestionIndex\n    };\n    localStorage.setItem(progressKey, JSON.stringify(progressData));\n    setQuestionProgress(updatedProgress);\n  };\n\n  const handleAnswerSelect = (optionId: string) => {\n    if (!isAnswerChecked) {\n      setSelectedAnswer(optionId);\n    }\n  };\n\n  const handleCheckAnswer = () => {\n    if (!selectedAnswer) {\n      alert('Silakan pilih jawaban terlebih dahulu!');\n      return;\n    }\n\n    const correctOption = currentQuestion?.options.find(opt => opt.isCorrect);\n    const isCorrect = selectedAnswer === correctOption?.id;\n\n    const updatedProgress = {\n      ...questionProgress,\n      [currentQuestion?.id || '']: {\n        questionId: currentQuestion?.id || '',\n        selectedAnswer,\n        isAnswered: true,\n        isChecked: true,\n        isCorrect\n      }\n    };\n\n    saveProgress(updatedProgress);\n    setIsAnswerChecked(true);\n    setShowExplanation(true);\n  };\n\n  const handleNextQuestion = () => {\n    if (!isAnswerChecked) {\n      alert('Silakan cek jawaban terlebih dahulu!');\n      return;\n    }\n\n    if (currentQuestionIndex < sessionData.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (!isAnswerChecked) {\n      alert('Silakan cek jawaban terlebih dahulu!');\n      return;\n    }\n\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'Mudah': return 'bg-green-100 text-green-800';\n      case 'Sedang': return 'bg-yellow-100 text-yellow-800';\n      case 'Sulit': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getAnsweredCount = () => {\n    return Object.values(questionProgress).filter(p => p.isChecked).length;\n  };\n\n  const getCorrectCount = () => {\n    return Object.values(questionProgress).filter(p => p.isChecked && p.isCorrect).length;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navigation />\n      <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-4\">\n            <Link to={`/practice/${subtestId}`}>\n              <Button variant=\"ghost\" size=\"sm\">\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Kembali\n              </Button>\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold\">{sessionData.title}</h1>\n              <p className=\"text-muted-foreground\">{sessionData.description}</p>\n            </div>\n          </div>\n          <Badge className={getDifficultyColor(sessionData.difficulty)}>\n            {sessionData.difficulty}\n          </Badge>\n        </div>\n\n        {/* Progress */}\n        <Card className=\"mb-6\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium\">Progress Latihan</span>\n              <span className=\"text-sm text-muted-foreground\">\n                {getAnsweredCount()} dari {sessionData.questions.length} soal dijawab\n              </span>\n            </div>\n            <Progress value={(getAnsweredCount() / sessionData.questions.length) * 100} className=\"mb-2\" />\n            <div className=\"flex justify-between text-xs text-muted-foreground\">\n              <span>Soal ke-{currentQuestionIndex + 1}</span>\n              <span>{getCorrectCount()} jawaban benar</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Question Card */}\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"text-lg\">\n                Soal {currentQuestionIndex + 1}\n              </CardTitle>\n              {currentQuestion && questionProgress[currentQuestion.id]?.isChecked && (\n                <div className=\"flex items-center gap-2\">\n                  {questionProgress[currentQuestion.id]?.isCorrect ? (\n                    <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                  ) : (\n                    <X className=\"h-5 w-5 text-red-600\" />\n                  )}\n                  <span className={`text-sm font-medium ${\n                    questionProgress[currentQuestion.id]?.isCorrect \n                      ? 'text-green-600' \n                      : 'text-red-600'\n                  }`}>\n                    {questionProgress[currentQuestion.id]?.isCorrect ? 'Benar' : 'Salah'}\n                  </span>\n                </div>\n              )}\n            </div>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-lg mb-6\">{currentQuestion?.text}</p>\n            \n            <div className=\"space-y-3 mb-6\">\n              {currentQuestion?.options.map((option) => {\n                const isSelected = selectedAnswer === option.id;\n                const isCorrect = option.isCorrect;\n                const showResult = isAnswerChecked;\n                \n                let buttonClass = 'w-full text-left p-4 border rounded-lg transition-all ';\n                \n                if (showResult) {\n                  if (isCorrect) {\n                    buttonClass += 'border-green-500 bg-green-50 text-green-800';\n                  } else if (isSelected && !isCorrect) {\n                    buttonClass += 'border-red-500 bg-red-50 text-red-800';\n                  } else {\n                    buttonClass += 'border-gray-200 bg-gray-50 text-gray-600';\n                  }\n                } else {\n                  if (isSelected) {\n                    buttonClass += 'border-blue-500 bg-blue-50 text-blue-800';\n                  } else {\n                    buttonClass += 'border-gray-200 hover:border-gray-300 hover:bg-gray-50';\n                  }\n                }\n                \n                return (\n                  <button\n                    key={option.id}\n                    onClick={() => handleAnswerSelect(option.id)}\n                    disabled={isAnswerChecked}\n                    className={buttonClass}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span>{option.id.toUpperCase()}. {option.text}</span>\n                      {showResult && isCorrect && (\n                        <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                      )}\n                      {showResult && isSelected && !isCorrect && (\n                        <X className=\"h-5 w-5 text-red-600\" />\n                      )}\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n\n            {/* Check Answer Button */}\n            {!isAnswerChecked && (\n              <div className=\"flex justify-center mb-4\">\n                <Button \n                  onClick={handleCheckAnswer}\n                  disabled={!selectedAnswer}\n                  className=\"px-8\"\n                >\n                  <Eye className=\"h-4 w-4 mr-2\" />\n                  Cek Jawaban\n                </Button>\n              </div>\n            )}\n\n            {/* Explanation */}\n            {showExplanation && (\n              <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                <div className=\"flex items-start gap-2\">\n                  <AlertCircle className=\"h-5 w-5 text-blue-600 mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <h4 className=\"font-semibold text-blue-800 mb-2\">Pembahasan:</h4>\n                    <p className=\"text-blue-700\">{currentQuestion?.explanation}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Navigation */}\n        <div className=\"flex justify-between items-center\">\n          <Button\n            variant=\"outline\"\n            onClick={handlePreviousQuestion}\n            disabled={currentQuestionIndex === 0 || !isAnswerChecked}\n          >\n            <ChevronLeft className=\"h-4 w-4 mr-2\" />\n            Sebelumnya\n          </Button>\n          \n          <span className=\"text-sm text-muted-foreground\">\n            {currentQuestionIndex + 1} dari {sessionData.questions.length}\n          </span>\n          \n          <Button\n            onClick={handleNextQuestion}\n            disabled={currentQuestionIndex === sessionData.questions.length - 1 || !isAnswerChecked}\n          >\n            Selanjutnya\n            <ChevronRight className=\"h-4 w-4 ml-2\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PracticeSession;"],"names":["sampleQuestions","id","text","options","isCorrect","explanation","PracticeSession","subtestId","topicId","useParams","currentQuestionIndex","setCurrentQuestionIndex","useState","selectedAnswer","setSelectedAnswer","isAnswerChecked","setIsAnswerChecked","showExplanation","setShowExplanation","questionProgress","setQuestionProgress","sessionData","title","description","difficulty","questions","currentQuestion","progressKey","useEffect","savedProgress","localStorage","getItem","parsed","JSON","parse","lastAnsweredIndex","Math","max","Object","values","map","progress","index","isChecked","min","length","currentProgress","getAnsweredCount","filter","p","jsxs","className","children","jsx","Navigation","Link","to","Button","variant","size","ArrowLeft","Badge","getDifficultyColor","Card","CardContent","Progress","value","CardHeader","CardTitle","_a","_b","CheckCircle","X","_c","_d","option","isSelected","showResult","buttonClass","onClick","handleAnswerSelect","optionId","disabled","toUpperCase","alert","correctOption","find","opt","updatedProgress","progressData","lastUpdated","Date","toISOString","currentIndex","setItem","stringify","saveProgress","questionId","isAnswered","Eye","AlertCircle","ChevronLeft","ChevronRight"],"mappings":"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"}