{"version":3,"file":"progress-BW6-ksch.js","sources":["../../node_modules/@radix-ui/react-progress/dist/index.mjs","../../src/components/ui/progress.tsx"],"sourcesContent":["\"use client\";\n\n// src/progress.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, \"Progress\"));\n    }\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, \"Progress\"));\n    }\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n    return /* @__PURE__ */ jsx(ProgressProvider, { scope: __scopeProgress, value, max, children: /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": 0,\n        \"aria-valuenow\": isNumber(value) ? value : void 0,\n        \"aria-valuetext\": valueLabel,\n        role: \"progressbar\",\n        \"data-state\": getProgressState(value, max),\n        \"data-value\": value ?? void 0,\n        \"data-max\": max,\n        ...progressProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": getProgressState(context.value, context.max),\n        \"data-value\": context.value ?? void 0,\n        \"data-max\": context.max,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return `${Math.round(value / max * 100)}%`;\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;\nexport {\n  Indicator,\n  Progress,\n  ProgressIndicator,\n  Root,\n  createProgressScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":["PROGRESS_NAME","createProgressContext","createProgressScope","createContextScope","ProgressProvider","useProgressContext","Progress","React.forwardRef","props","forwardedRef","__scopeProgress","value","valueProp","max","maxProp","getValueLabel","defaultGetValueLabel","progressProps","isValidMaxNumber","isValidValueNumber","valueLabel","isNumber","jsx","scope","children","Primitive","div","role","getProgressState","ref","displayName","INDICATOR_NAME","ProgressIndicator","indicatorProps","context","Math","round","maxValue","isNaN","Root","Indicator","className","ProgressPrimitive.Root","cn","ProgressPrimitive.Indicator","style","transform"],"mappings":"6IAOA,IAAIA,EAAgB,YAEfC,EAAuBC,GAAuBC,EAAmBH,IACjEI,EAAkBC,GAAsBJ,EAAsBD,GAC/DM,EAAWC,EAAAA,WACb,CAACC,EAAOC,KACN,MAAMC,gBACJA,EACAC,MAAOC,EAAY,KACnBC,IAAKC,EAAAC,cACLA,EAAgBC,KACbC,GACDT,GACCM,GAAuB,IAAZA,IAAmBI,EAAiBJ,GAGpD,MAAMD,EAAMK,EAAiBJ,GAAWA,EAf1B,IAgBI,OAAdF,GAAuBO,EAAmBP,EAAWC,GAGzD,MAAMF,EAAQQ,EAAmBP,EAAWC,GAAOD,EAAY,KACzDQ,EAAaC,EAASV,GAASI,EAAcJ,EAAOE,QAAO,EACjE,OAAuBS,EAAAA,IAAIlB,EAAkB,CAAEmB,MAAOb,EAAiBC,QAAOE,MAAKW,SAA0BF,EAAAA,IAC3GG,EAAUC,IACV,CACE,gBAAiBb,EACjB,gBAAiB,EACjB,gBAAiBQ,EAASV,GAASA,OAAQ,EAC3C,iBAAkBS,EAClBO,KAAM,cACN,aAAcC,EAAiBjB,EAAOE,GACtC,aAAcF,QAAS,EACvB,WAAYE,KACTI,EACHY,IAAKpB,QAKbH,EAASwB,YAAc9B,EACvB,IAAI+B,EAAiB,oBACjBC,EAAoBzB,EAAAA,WACtB,CAACC,EAAOC,KACN,MAAMC,gBAAEA,KAAoBuB,GAAmBzB,EACzC0B,EAAU7B,EAAmB0B,EAAgBrB,GACnD,OAAuBY,EAAAA,IACrBG,EAAUC,IACV,CACE,aAAcE,EAAiBM,EAAQvB,MAAOuB,EAAQrB,KACtD,aAAcqB,EAAQvB,YAAS,EAC/B,WAAYuB,EAAQrB,OACjBoB,EACHJ,IAAKpB,MAMb,SAASO,EAAqBL,EAAOE,GACnC,MAAO,GAAGsB,KAAKC,MAAMzB,EAAQE,EAAM,OACrC,CACA,SAASe,EAAiBjB,EAAO0B,GAC/B,OAAgB,MAAT1B,EAAgB,gBAAkBA,IAAU0B,EAAW,WAAa,SAC7E,CACA,SAAShB,EAASV,GAChB,MAAwB,iBAAVA,CAChB,CACA,SAASO,EAAiBL,GACxB,OAAOQ,EAASR,KAASyB,MAAMzB,IAAQA,EAAM,CAC/C,CACA,SAASM,EAAmBR,EAAOE,GACjC,OAAOQ,EAASV,KAAW2B,MAAM3B,IAAUA,GAASE,GAAOF,GAAS,CACtE,CAfAqB,EAAkBF,YAAcC,EA2BhC,IAAIQ,EAAOjC,EACPkC,EAAYR,ECvFhB,MAAM1B,EAAWC,EAAAA,WAGf,EAAGkC,YAAW9B,WAAUH,GAASqB,IACjCP,EAAAA,IAACoB,EAAA,CACCb,MACAY,UAAWE,EACT,gEACAF,MAEEjC,EAEJgB,SAAAF,EAAAA,IAACsB,EAAA,CACCH,UAAU,iDACVI,MAAO,CAAEC,UAAW,eAAe,KAAOnC,GAAS,aAIzDL,EAASwB,YAAcY,EAAuBZ","x_google_ignoreList":[0]}