{"version":3,"file":"switch-Cp_LKUDP.js","sources":["../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../src/components/ui/switch.tsx"],"sourcesContent":["\"use client\";\n\n// src/switch.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: SWITCH_NAME\n    });\n    return /* @__PURE__ */ jsxs(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"switch\",\n          \"aria-checked\": checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...switchProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        SwitchBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...thumbProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSwitchThumb.displayName = THUMB_NAME;\nvar BUBBLE_INPUT_NAME = \"SwitchBubbleInput\";\nvar SwitchBubbleInput = React.forwardRef(\n  ({\n    __scopeSwitch,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      \"input\",\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nSwitchBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;\nexport {\n  Root,\n  Switch,\n  SwitchThumb,\n  Thumb,\n  createSwitchScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":["SWITCH_NAME","createSwitchContext","createSwitchScope","createContextScope","SwitchProvider","useSwitchContext","Switch","React.forwardRef","props","forwardedRef","__scopeSwitch","name","checked","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","form","switchProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","closest","setChecked","useControllableState","prop","defaultProp","onChange","caller","jsxs","scope","children","jsx","Primitive","type","role","getState","ref","onClick","composeEventHandlers","event","prevChecked","current","isPropagationStopped","stopPropagation","SwitchBubbleInput","control","bubbles","style","transform","displayName","THUMB_NAME","SwitchThumb","thumbProps","context","span","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","window","HTMLInputElement","prototype","Object","getOwnPropertyDescriptor","set","Event","call","dispatchEvent","tabIndex","position","pointerEvents","opacity","margin","Root","Thumb","className","SwitchPrimitives.Root","cn","SwitchPrimitives.Thumb"],"mappings":"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","x_google_ignoreList":[0]}