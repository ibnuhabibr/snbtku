{"version":3,"file":"AdminLogin-P0FMgoyK.js","sources":["../../src/pages/admin/AdminLogin.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { authService } from \"@/services/authService\";\nimport { Shield } from \"lucide-react\";\n\nconst adminLoginSchema = z.object({\n  passkey: z.string().min(1, {\n    message: \"Passkey is required\",\n  }),\n});\n\ntype AdminLoginFormValues = z.infer<typeof adminLoginSchema>;\n\nconst AdminLogin = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  const { toast } = useToast();\n\n  const form = useForm<AdminLoginFormValues>({\n    resolver: zodResolver(adminLoginSchema),\n    defaultValues: {\n      passkey: \"\",\n    },\n  });\n\n  const onSubmit = async (values: AdminLoginFormValues) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      await authService.adminLogin(values.passkey);\n      \n      toast({\n        title: \"Login berhasil\",\n        description: \"Selamat datang, Administrator!\",\n      });\n      \n      navigate(\"/admin\");\n    } catch (error: any) {\n      console.error(\"Admin login error:\", error);\n      setError(error.message);\n      toast({\n        title: \"Login gagal\",\n        description: error.message || \"Terjadi kesalahan saat login.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4\">\n      <Card className=\"w-full max-w-md shadow-2xl border-purple-200\">\n        <CardHeader className=\"space-y-1 text-center\">\n          <div className=\"flex justify-center mb-4\">\n            <Shield className=\"h-12 w-12 text-purple-600\" />\n          </div>\n          <CardTitle className=\"text-2xl font-bold text-gray-900\">Admin Access</CardTitle>\n          <CardDescription className=\"text-gray-600\">\n            Enter your passkey to access the admin dashboard\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {error && (\n            <Alert variant=\"destructive\" className=\"mb-4\">\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"passkey\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Admin Passkey</FormLabel>\n                    <FormControl>\n                      <Input \n                        type=\"password\"\n                        placeholder=\"Enter admin passkey\" \n                        disabled={isLoading} \n                        {...field} \n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <Button \n                type=\"submit\" \n                className=\"w-full bg-purple-600 hover:bg-purple-700\" \n                disabled={isLoading}\n              >\n                {isLoading ? \"Authenticating...\" : \"Access Admin Panel\"}\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default AdminLogin;"],"names":["adminLoginSchema","z.object","passkey","z.string","min","message","AdminLogin","isLoading","setIsLoading","useState","error","setError","navigate","useNavigate","toast","useToast","form","useForm","resolver","zodResolver","defaultValues","className","children","jsxs","Card","CardHeader","jsx","Shield","CardTitle","CardDescription","CardContent","Alert","variant","AlertDescription","Form","onSubmit","handleSubmit","async","values","authService","adminLogin","title","description","FormField","control","name","render","field","FormItem","FormLabel","FormControl","Input","type","placeholder","disabled","FormMessage","Button"],"mappings":"gcAcA,MAAMA,EAAmBC,EAAS,CAChCC,QAASC,IAAWC,IAAI,EAAG,CACzBC,QAAS,0BAMPC,EAAa,KACjB,MAAOC,EAAWC,GAAgBC,EAAAA,UAAS,IACpCC,EAAOC,GAAYF,EAAAA,SAAwB,MAC5CG,EAAWC,KACXC,MAAEA,GAAUC,IAEZC,EAAOC,EAA8B,CACzCC,SAAUC,EAAYnB,GACtBoB,cAAe,CACblB,QAAS,MA8Bb,aACG,MAAA,CAAImB,UAAU,iHACbC,SAAAC,EAAAA,KAACC,EAAA,CAAKH,UAAU,+CACdC,SAAA,GAAAC,KAACE,EAAA,CAAWJ,UAAU,wBACpBC,SAAA,CAAAI,EAAAA,IAAC,OAAIL,UAAU,2BACbC,eAACK,EAAA,CAAON,UAAU,gCAEpBK,EAAAA,IAACE,EAAA,CAAUP,UAAU,mCAAmCC,SAAA,iBACxDI,EAAAA,IAACG,EAAA,CAAgBR,UAAU,gBAAgBC,SAAA,+DAI5CQ,EAAA,CACER,SAAA,CAAAZ,GACCgB,EAAAA,IAACK,GAAMC,QAAQ,cAAcX,UAAU,OACrCC,SAAAI,EAAAA,IAACO,EAAA,CAAkBX,SAAAZ,QAIvBgB,IAACQ,EAAA,IAASlB,EACRM,SAAAC,EAAAA,KAAC,OAAA,CAAKY,SAAUnB,EAAKoB,aA9CdC,MAAOC,IACtB9B,GAAa,GACbG,EAAS,MAET,UACQ4B,EAAYC,WAAWF,EAAOpC,SAEpCY,EAAM,CACJ2B,MAAO,iBACPC,YAAa,mCAGf9B,EAAS,SACX,OAASF,GAEPC,EAASD,EAAML,SACfS,EAAM,CACJ2B,MAAO,cACPC,YAAahC,EAAML,SAAW,gCAC9B2B,QAAS,eAEb,CAAA,QACExB,GAAa,EACf,IAuBqDa,UAAU,YACrDC,SAAA,CAAAI,EAAAA,IAACiB,EAAA,CACCC,QAAS5B,EAAK4B,QACdC,KAAK,UACLC,OAAQ,EAAGC,kBACRC,EAAA,CACC1B,SAAA,GAAAI,IAACuB,GAAU3B,SAAA,wBACV4B,EAAA,CACC5B,SAAAI,EAAAA,IAACyB,EAAA,CACCC,KAAK,WACLC,YAAY,sBACZC,SAAU/C,KACNwC,YAGPQ,EAAA,CAAA,QAKP7B,EAAAA,IAAC8B,EAAA,CACCJ,KAAK,SACL/B,UAAU,2CACViC,SAAU/C,EAETe,WAAY,oBAAsB"}