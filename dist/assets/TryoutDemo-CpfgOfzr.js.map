{"version":3,"file":"TryoutDemo-CpfgOfzr.js","sources":["../../node_modules/@radix-ui/react-radio-group/dist/index.mjs","../../src/components/ui/radio-group.tsx","../../src/components/TryoutPlayer.tsx","../../src/pages/TryoutDemo.tsx"],"sourcesContent":["\"use client\";\n\n// src/radio-group.tsx\nimport * as React2 from \"react\";\nimport { composeEventHandlers as composeEventHandlers2 } from \"@radix-ui/primitive\";\nimport { useComposedRefs as useComposedRefs2 } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as createContextScope2 } from \"@radix-ui/react-context\";\nimport { Primitive as Primitive2 } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection } from \"@radix-ui/react-direction\";\n\n// src/radio.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar RADIO_NAME = \"Radio\";\nvar [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);\nvar [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);\nvar Radio = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRadio,\n      name,\n      checked = false,\n      required,\n      disabled,\n      value = \"on\",\n      onCheck,\n      form,\n      ...radioProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    return /* @__PURE__ */ jsxs(RadioProvider, { scope: __scopeRadio, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"radio\",\n          \"aria-checked\": checked,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...radioProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            if (!checked) onCheck?.();\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        RadioBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nRadio.displayName = RADIO_NAME;\nvar INDICATOR_NAME = \"RadioIndicator\";\nvar RadioIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadio, forceMount, ...indicatorProps } = props;\n    const context = useRadioContext(INDICATOR_NAME, __scopeRadio);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.checked, children: /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nRadioIndicator.displayName = INDICATOR_NAME;\nvar BUBBLE_INPUT_NAME = \"RadioBubbleInput\";\nvar RadioBubbleInput = React.forwardRef(\n  ({\n    __scopeRadio,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      Primitive.input,\n      {\n        type: \"radio\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nRadioBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\n\n// src/radio-group.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar ARROW_KEYS = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"];\nvar RADIO_GROUP_NAME = \"RadioGroup\";\nvar [createRadioGroupContext, createRadioGroupScope] = createContextScope2(RADIO_GROUP_NAME, [\n  createRovingFocusGroupScope,\n  createRadioScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar useRadioScope = createRadioScope();\nvar [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME);\nvar RadioGroup = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRadioGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue ?? null,\n      onChange: onValueChange,\n      caller: RADIO_GROUP_NAME\n    });\n    return /* @__PURE__ */ jsx2(\n      RadioGroupProvider,\n      {\n        scope: __scopeRadioGroup,\n        name,\n        required,\n        disabled,\n        value,\n        onValueChange: setValue,\n        children: /* @__PURE__ */ jsx2(\n          RovingFocusGroup.Root,\n          {\n            asChild: true,\n            ...rovingFocusGroupScope,\n            orientation,\n            dir: direction,\n            loop,\n            children: /* @__PURE__ */ jsx2(\n              Primitive2.div,\n              {\n                role: \"radiogroup\",\n                \"aria-required\": required,\n                \"aria-orientation\": orientation,\n                \"data-disabled\": disabled ? \"\" : void 0,\n                dir: direction,\n                ...groupProps,\n                ref: forwardedRef\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nRadioGroup.displayName = RADIO_GROUP_NAME;\nvar ITEM_NAME = \"RadioGroupItem\";\nvar RadioGroupItem = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadioGroup, disabled, ...itemProps } = props;\n    const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs2(forwardedRef, ref);\n    const checked = context.value === itemProps.value;\n    const isArrowKeyPressedRef = React2.useRef(false);\n    React2.useEffect(() => {\n      const handleKeyDown = (event) => {\n        if (ARROW_KEYS.includes(event.key)) {\n          isArrowKeyPressedRef.current = true;\n        }\n      };\n      const handleKeyUp = () => isArrowKeyPressedRef.current = false;\n      document.addEventListener(\"keydown\", handleKeyDown);\n      document.addEventListener(\"keyup\", handleKeyUp);\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n        document.removeEventListener(\"keyup\", handleKeyUp);\n      };\n    }, []);\n    return /* @__PURE__ */ jsx2(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !isDisabled,\n        active: checked,\n        children: /* @__PURE__ */ jsx2(\n          Radio,\n          {\n            disabled: isDisabled,\n            required: context.required,\n            checked,\n            ...radioScope,\n            ...itemProps,\n            name: context.name,\n            ref: composedRefs,\n            onCheck: () => context.onValueChange(itemProps.value),\n            onKeyDown: composeEventHandlers2((event) => {\n              if (event.key === \"Enter\") event.preventDefault();\n            }),\n            onFocus: composeEventHandlers2(itemProps.onFocus, () => {\n              if (isArrowKeyPressedRef.current) ref.current?.click();\n            })\n          }\n        )\n      }\n    );\n  }\n);\nRadioGroupItem.displayName = ITEM_NAME;\nvar INDICATOR_NAME2 = \"RadioGroupIndicator\";\nvar RadioGroupIndicator = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadioGroup, ...indicatorProps } = props;\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    return /* @__PURE__ */ jsx2(RadioIndicator, { ...radioScope, ...indicatorProps, ref: forwardedRef });\n  }\n);\nRadioGroupIndicator.displayName = INDICATOR_NAME2;\nvar Root2 = RadioGroup;\nvar Item2 = RadioGroupItem;\nvar Indicator = RadioGroupIndicator;\nexport {\n  Indicator,\n  Item2 as Item,\n  RadioGroup,\n  RadioGroupIndicator,\n  RadioGroupItem,\n  Root2 as Root,\n  createRadioGroupScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","import { useState, useEffect, useCallback, useMemo, memo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Label } from '@/components/ui/label';\nimport { Progress } from '@/components/ui/progress';\nimport { Separator } from '@/components/ui/separator';\nimport { \n  Clock, \n  ChevronLeft, \n  ChevronRight, \n  Flag, \n  CheckCircle, \n  Circle, \n  AlertCircle,\n  Square\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { ITryoutPackageSNBT } from '@/types/konten';\n\ninterface TryoutPlayerProps {\n  paketTryout: ITryoutPackageSNBT;\n}\n\ntype AnswerStatus = 'unanswered' | 'answered' | 'doubtful';\n\ninterface UserAnswer {\n  soalId: string;\n  jawaban: string;\n  status: AnswerStatus;\n  waktuJawab: Date;\n}\n\ninterface BlockResult {\n  blockIndex: number;\n  blockName: string;\n  totalSoal: number;\n  terjawab: number;\n  benar: number;\n  salah: number;\n  kosong: number;\n  raguRagu: number;\n}\n\n// Memoized Question Component for better performance\nconst Question = memo(({ \n  soal, \n  userAnswer, \n  onAnswerChange, \n  onStatusChange \n}: { \n  soal: any; \n  userAnswer: UserAnswer | undefined; \n  onAnswerChange: (jawaban: string) => void; \n  onStatusChange: (status: AnswerStatus) => void; \n}) => {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"prose prose-sm max-w-none\">\n        <h3 className=\"text-lg font-medium\">{soal.pertanyaan}</h3>\n      </div>\n      \n      <RadioGroup \n        value={userAnswer?.jawaban || ''} \n        onValueChange={onAnswerChange}\n        className=\"space-y-3\"\n      >\n        {Object.entries(soal.pilihan_jawaban).map(([key, value]) => (\n          <div key={key} className=\"flex items-center space-x-2 rounded-md border p-3 hover:bg-muted/50 transition-colors\">\n            <RadioGroupItem value={key} id={`answer-${key}`} />\n            <Label htmlFor={`answer-${key}`} className=\"flex-grow cursor-pointer\">{String(value)}</Label>\n          </div>\n        ))}\n      </RadioGroup>\n      \n      <div className=\"flex space-x-2 mt-4\">\n        <Button \n          variant={userAnswer?.status === 'doubtful' ? 'destructive' : 'outline'} \n          size=\"sm\"\n          onClick={() => onStatusChange(userAnswer?.status === 'doubtful' ? 'answered' : 'doubtful')}\n        >\n          <Flag className=\"mr-1 h-4 w-4\" />\n          {userAnswer?.status === 'doubtful' ? 'Tandai Ragu-ragu' : 'Batalkan Ragu-ragu'}\n        </Button>\n      </div>\n    </div>\n  );\n});\n\nQuestion.displayName = 'Question'; // Required for memo components in React DevTools\n\n// Memoized Timer Component for better performance\nconst Timer = memo(({ seconds }: { seconds: number; onTimeUp?: () => void }) => {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  \n  const formattedTime = `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  \n  // Warning condition when less than 5 minutes left\n  const isWarning = seconds < 300;\n  \n  return (\n    <div className={cn(\n      \"flex items-center space-x-2 text-lg font-mono\", \n      isWarning ? \"text-red-600 animate-pulse\" : \"\"\n    )}>\n      <Clock className=\"h-5 w-5\" />\n      <span>{formattedTime}</span>\n    </div>\n  );\n});\n\nTimer.displayName = 'Timer'; // Required for memo components in React DevTools\n\nconst TryoutPlayer: React.FC<TryoutPlayerProps> = ({ paketTryout }) => {\n  // State Management\n  const [currentBlockIndex, setCurrentBlockIndex] = useState(0);\n  const [currentSoalIndex, setCurrentSoalIndex] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<Record<string, UserAnswer>>({});\n  const [isFinished, setIsFinished] = useState(false);\n  const [results, setResults] = useState<BlockResult[]>([]);\n\n  // Get current block and soal - memoized to prevent re-calculations\n  const currentBlock = useMemo(() => paketTryout.blocks[currentBlockIndex], [paketTryout.blocks, currentBlockIndex]);\n  const currentSoalId = useMemo(() => currentBlock?.soal_ids[currentSoalIndex], [currentBlock, currentSoalIndex]);\n  const totalBlocks = useMemo(() => paketTryout.blocks.length, [paketTryout.blocks]);\n  \n  // TODO: This should fetch actual soal data from API or props\n  // For now, creating a mock soal object to prevent TypeScript errors\n  const currentSoal = useMemo(() => currentSoalId ? {\n    id: currentSoalId,\n    subtest: 'Penalaran Umum' as const,\n    pertanyaan: 'Soal akan dimuat dari server...',\n    pilihan_jawaban: { A: 'A', B: 'B', C: 'C', D: 'D', E: 'E' },\n    jawaban_benar: 'A' as const,\n    pembahasan: '',\n    tingkat_kesulitan: 'Sedang' as const,\n    kategori_kognitif: 'C1' as const,\n    waktu_pengerjaan_detik: 120,\n    tags: [],\n    created_at: new Date(),\n    updated_at: new Date()\n  } : null, [currentSoalId]);\n\n  // Handle finish exam\n  const handleFinishExam = useCallback(() => {\n    const allResults = paketTryout.blocks.map((_, index) => calculateBlockResult(index));\n    setResults(allResults);\n    setIsFinished(true);\n  }, [paketTryout.blocks]);\n\n  // Handle time up - move to next block or finish\n  const handleTimeUp = useCallback(() => {\n    if (currentBlockIndex < totalBlocks - 1) {\n      setCurrentBlockIndex(prev => prev + 1);\n    } else {\n      handleFinishExam();\n    }\n  }, [currentBlockIndex, totalBlocks, handleFinishExam]);\n\n  // Initialize timer when block changes\n  useEffect(() => {\n    if (currentBlock && !isFinished) {\n      setTimer(currentBlock.waktu_pengerjaan_menit * 60); // Convert to seconds\n      setCurrentSoalIndex(0); // Reset to first question of new block\n    }\n  }, [currentBlockIndex, currentBlock, isFinished]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timer > 0 && !isFinished) {\n      const interval = setInterval(() => {\n        setTimer(prev => {\n          if (prev <= 1) {\n            // Time's up, move to next block\n            handleTimeUp();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n    return undefined;\n  }, [timer, isFinished, handleTimeUp]);\n\n  // Handle answer selection\n  const handleAnswerSelect = (soalId: string, jawaban: string) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [soalId]: {\n        soalId,\n        jawaban,\n        status: 'answered',\n        waktuJawab: new Date()\n      }\n    }));\n  };\n\n  // Handle doubt flag\n  const handleDoubtFlag = (soalId: string) => {\n    setUserAnswers(prev => {\n      const currentAnswer = prev[soalId];\n      return {\n        ...prev,\n        [soalId]: {\n          soalId,\n          jawaban: currentAnswer?.jawaban || '',\n          status: currentAnswer?.status === 'doubtful' ? \n            (currentAnswer.jawaban ? 'answered' : 'unanswered') : 'doubtful',\n          waktuJawab: currentAnswer?.waktuJawab || new Date()\n        }\n      };\n    });\n  };\n\n  // Navigate between questions within current block\n  const navigateToSoal = (index: number) => {\n    if (currentBlock && index >= 0 && index < currentBlock.soal_ids.length) {\n      setCurrentSoalIndex(index);\n    }\n  };\n\n  // Calculate results for current block\n  const calculateBlockResult = (blockIndex: number): BlockResult => {\n    const block = paketTryout.blocks[blockIndex];\n    if (!block) {\n      return {\n        blockIndex,\n        blockName: 'Unknown Block',\n        totalSoal: 0,\n        terjawab: 0,\n        benar: 0,\n        salah: 0,\n        kosong: 0,\n        raguRagu: 0\n      };\n    }\n    \n    const blockAnswers = block.soal_ids.map(soalId => userAnswers[soalId]);\n    \n    const totalSoal = block.soal_ids.length;\n    const terjawab = blockAnswers.filter(answer => answer?.jawaban).length;\n    const benar = blockAnswers.filter(answer => \n      answer?.jawaban && answer.jawaban === answer.soalId // This would need actual soal data to check\n    ).length;\n    const raguRagu = blockAnswers.filter(answer => answer?.status === 'doubtful').length;\n    \n    return {\n      blockIndex,\n      blockName: block.nama_block || 'Unknown Block',\n      totalSoal,\n      terjawab,\n      benar,\n      salah: terjawab - benar,\n      kosong: totalSoal - terjawab,\n      raguRagu\n    };\n  };\n\n  // Format timer display\n  const formatTime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Get answer status for a question\n  const getAnswerStatus = (soalId: string): AnswerStatus => {\n    return userAnswers[soalId]?.status || 'unanswered';\n  };\n\n  // Get status icon\n  const getStatusIcon = (status: AnswerStatus) => {\n    switch (status) {\n      case 'answered':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'doubtful':\n        return <AlertCircle className=\"h-4 w-4 text-yellow-500\" />;\n      default:\n        return <Circle className=\"h-4 w-4 text-gray-400\" />;\n    }\n  };\n\n  // Results view\n  if (isFinished) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-background via-primary/5 to-accent/5 p-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <Card>\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-2xl font-bold text-green-600\">\n                🎉 Ujian Selesai!\n              </CardTitle>\n              <p className=\"text-muted-foreground\">\n                Berikut adalah hasil sementara ujian Anda\n              </p>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-6\">\n                {results.map((result, index) => (\n                  <Card key={index}>\n                    <CardHeader>\n                      <CardTitle className=\"text-lg\">{result.blockName}</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 text-center\">\n                        <div>\n                          <div className=\"text-2xl font-bold text-blue-600\">{result.totalSoal}</div>\n                          <div className=\"text-sm text-muted-foreground\">Total Soal</div>\n                        </div>\n                        <div>\n                          <div className=\"text-2xl font-bold text-green-600\">{result.terjawab}</div>\n                          <div className=\"text-sm text-muted-foreground\">Terjawab</div>\n                        </div>\n                        <div>\n                          <div className=\"text-2xl font-bold text-red-600\">{result.kosong}</div>\n                          <div className=\"text-sm text-muted-foreground\">Kosong</div>\n                        </div>\n                        <div>\n                          <div className=\"text-2xl font-bold text-yellow-600\">{result.raguRagu}</div>\n                          <div className=\"text-sm text-muted-foreground\">Ragu-ragu</div>\n                        </div>\n                        <div>\n                          <div className=\"text-2xl font-bold text-purple-600\">\n                            {Math.round((result.terjawab / result.totalSoal) * 100)}%\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">Persentase</div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n              \n              <div className=\"mt-8 text-center\">\n                <Button size=\"lg\" className=\"mr-4\">\n                  Lihat Pembahasan\n                </Button>\n                <Button variant=\"outline\" size=\"lg\">\n                  Kembali ke Dashboard\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  // Main exam interface\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-primary/5 to-accent/5\">\n      {/* Header with timer and progress */}\n      <div className=\"bg-white/95 backdrop-blur-md border-b border-border sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-xl font-bold\">{paketTryout.judul}</h1>\n              <p className=\"text-sm text-muted-foreground\">\n                Blok {currentBlockIndex + 1} dari {totalBlocks}: {currentBlock?.nama_block}\n              </p>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"h-5 w-5 text-primary\" />\n                <span className={cn(\n                  \"text-lg font-mono font-bold\",\n                  timer < 300 ? \"text-red-500\" : \"text-primary\"\n                )}>\n                  {formatTime(timer)}\n                </span>\n              </div>\n              \n              <Button \n                variant=\"destructive\" \n                size=\"sm\"\n                onClick={handleFinishExam}\n              >\n                <Square className=\"h-4 w-4 mr-1\" />\n                Selesaikan Ujian\n              </Button>\n            </div>\n          </div>\n          \n          {/* Progress bar */}\n          <div className=\"mt-4\">\n            <Progress \n              value={((currentBlockIndex) / totalBlocks) * 100} \n              className=\"h-2\"\n            />\n            <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n              <span>Blok {currentBlockIndex + 1}</span>\n              <span>{totalBlocks} Blok Total</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto p-4\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Question navigation panel */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"sticky top-24\">\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Navigasi Soal</CardTitle>\n                <p className=\"text-sm text-muted-foreground\">\n                  {currentBlock?.nama_block}\n                </p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-5 gap-2\">\n                  {currentBlock?.soal_ids.map((soalId, index) => {\n                    const status = getAnswerStatus(soalId);\n                    return (\n                      <Button\n                        key={soalId}\n                        variant={index === currentSoalIndex ? \"default\" : \"outline\"}\n                        size=\"sm\"\n                        className={cn(\n                          \"h-10 w-10 p-0\",\n                          status === 'answered' && \"border-green-500 bg-green-50\",\n                          status === 'doubtful' && \"border-yellow-500 bg-yellow-50\"\n                        )}\n                        onClick={() => navigateToSoal(index)}\n                      >\n                        <div className=\"flex flex-col items-center\">\n                          <span className=\"text-xs font-bold\">{index + 1}</span>\n                          <div className=\"h-1 w-1\">\n                            {getStatusIcon(status)}\n                          </div>\n                        </div>\n                      </Button>\n                    );\n                  })}\n                </div>\n                \n                <Separator className=\"my-4\" />\n                \n                {/* Legend */}\n                <div className=\"space-y-2 text-xs\">\n                  <div className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"h-3 w-3 text-green-500\" />\n                    <span>Sudah Dijawab</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <AlertCircle className=\"h-3 w-3 text-yellow-500\" />\n                    <span>Ragu-ragu</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Circle className=\"h-3 w-3 text-gray-400\" />\n                    <span>Belum Dijawab</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Main question area */}\n          <div className=\"lg:col-span-3\">\n            {currentSoal && (\n              <Card>\n                <CardHeader>\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <CardTitle className=\"text-lg\">\n                        Soal {currentSoalIndex + 1} dari {currentBlock?.soal_ids.length || 0}\n                      </CardTitle>\n                      <Badge variant=\"secondary\" className=\"mt-2\">\n                        {currentSoal.subtest.replace(/_/g, ' ').toUpperCase()}\n                      </Badge>\n                    </div>\n                    \n                    <Button\n                      variant={getAnswerStatus(currentSoalId || '') === 'doubtful' ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => handleDoubtFlag(currentSoalId || '')}\n                    >\n                      <Flag className=\"h-4 w-4 mr-1\" />\n                      Ragu-ragu\n                    </Button>\n                  </div>\n                </CardHeader>\n                \n                <CardContent>\n                  <div className=\"space-y-6\">\n                    {/* Question text */}\n                    <div className=\"prose max-w-none\">\n                      <p className=\"text-base leading-relaxed whitespace-pre-wrap\">\n                        {currentSoal.pertanyaan}\n                      </p>\n                    </div>\n                    \n                    {/* Answer options */}\n                    <RadioGroup\n                      value={userAnswers[currentSoalId || '']?.jawaban || \"\"}\n                      onValueChange={(value) => handleAnswerSelect(currentSoalId || '', value)}\n                    >\n                      {Object.entries(currentSoal.pilihan_jawaban).map(([key, value]) => (\n                        <div key={key} className=\"flex items-center space-x-3 p-3 rounded-lg border hover:bg-accent/50 transition-colors\">\n                          <RadioGroupItem value={key} id={key} />\n                          <Label \n                            htmlFor={key} \n                            className=\"flex-1 cursor-pointer text-base leading-relaxed\"\n                          >\n                            <span className=\"font-semibold mr-2\">{key}.</span>\n                            {value}\n                          </Label>\n                        </div>\n                      ))}\n                    </RadioGroup>\n                  </div>\n                  \n                  {/* Navigation buttons */}\n                  <div className=\"flex justify-between items-center mt-8 pt-6 border-t\">\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => navigateToSoal(currentSoalIndex - 1)}\n                      disabled={currentSoalIndex === 0}\n                    >\n                      <ChevronLeft className=\"h-4 w-4 mr-1\" />\n                      Sebelumnya\n                    </Button>\n                    \n                    <div className=\"text-sm text-muted-foreground\">\n                      Estimasi waktu: {currentSoal.waktu_pengerjaan_detik}s\n                    </div>\n                    \n                    <Button\n                      onClick={() => navigateToSoal(currentSoalIndex + 1)}\n                      disabled={currentSoalIndex === (currentBlock?.soal_ids.length || 0) - 1}\n                    >\n                      Selanjutnya\n                      <ChevronRight className=\"h-4 w-4 ml-1\" />\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TryoutPlayer;","import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Play, ArrowLeft } from 'lucide-react';\nimport TryoutPlayer from '@/components/TryoutPlayer';\nimport { ITryoutPackageSNBT } from '@/types/konten';\nimport { dummySoal } from '@/data/dummySoal';\nimport Navigation from '@/components/Navigation';\n\n// Data dummy paket tryout untuk demo\nconst dummyPaketTryout: ITryoutPackageSNBT = {\n  id: 'DEMO-001',\n  judul: 'Simulasi UTBK-SNBT Demo 2024',\n  deskripsi: 'Paket simulasi lengkap untuk demo TryoutPlayer',\n  blocks: [\n    {\n      urutan: 1,\n      nama_block: 'Tes Potensi Skolastik (TPS)',\n      deskripsi: 'Tes kemampuan penalaran dan pemahaman umum',\n      waktu_pengerjaan_menit: 5, // Shortened for demo\n      soal_ids: ['PU001', 'PU002', 'PPU001', 'KMBM001', 'PK001'],\n      subtests_included: ['Penalaran Umum', 'Pengetahuan & Pemahaman Umum', 'Pemahaman Bacaan & Menulis', 'Pengetahuan Kuantitatif']\n    },\n    {\n      urutan: 2,\n      nama_block: 'Literasi dalam Bahasa Indonesia dan Inggris',\n      deskripsi: 'Tes kemampuan literasi bahasa Indonesia dan Inggris',\n      waktu_pengerjaan_menit: 3, // Shortened for demo\n      soal_ids: ['LBI001', 'LBE001', 'PPU002'],\n      subtests_included: ['Literasi B. Indonesia', 'Literasi B. Inggris']\n    },\n    {\n      urutan: 3,\n      nama_block: 'Penalaran Matematika',\n      deskripsi: 'Tes kemampuan penalaran matematika',\n      waktu_pengerjaan_menit: 2, // Shortened for demo\n      soal_ids: ['PM001', 'PK002', 'PU003'],\n      subtests_included: ['Penalaran Matematika']\n    }\n  ],\n  total_waktu: 10,\n  total_soal: 11,\n  tingkat_kesulitan: 'Mudah',\n  kategori: 'Simulasi Lengkap',\n  metadata: {\n    pembuat: 'System',\n    tahun_soal: 2024,\n    versi: '1.0',\n    tags: ['demo', 'simulasi']\n  },\n  published: true,\n  created_at: new Date(),\n  updated_at: new Date()\n};\n\nconst TryoutDemo = () => {\n  const [isStarted, setIsStarted] = useState(false);\n\n  if (isStarted) {\n    return (\n      <div>\n        <TryoutPlayer paketTryout={dummyPaketTryout} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-primary/5 to-accent/5\">\n      <Navigation />\n      \n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <Button \n            variant=\"ghost\" \n            onClick={() => window.history.back()}\n            className=\"mb-4\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Kembali\n          </Button>\n          \n          <h1 className=\"text-3xl font-bold mb-2\">Demo TryoutPlayer</h1>\n          <p className=\"text-muted-foreground\">\n            Halaman demo untuk menguji komponen TryoutPlayer dengan data simulasi UTBK-SNBT\n          </p>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-2xl\">{dummyPaketTryout.judul}</CardTitle>\n            <p className=\"text-muted-foreground\">{dummyPaketTryout.deskripsi}</p>\n          </CardHeader>\n          \n          <CardContent>\n            <div className=\"space-y-6\">\n              {/* Package info */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"text-center p-4 bg-primary/5 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-primary\">{dummyPaketTryout.blocks.length}</div>\n                  <div className=\"text-sm text-muted-foreground\">Blok Pengerjaan</div>\n                </div>\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">{dummyPaketTryout.total_soal}</div>\n                  <div className=\"text-sm text-muted-foreground\">Total Soal</div>\n                </div>\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">{dummyPaketTryout.total_waktu}</div>\n                  <div className=\"text-sm text-muted-foreground\">Menit</div>\n                </div>\n              </div>\n\n              {/* Block details */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold\">Detail Blok Pengerjaan:</h3>\n                {dummyPaketTryout.blocks.map((block, index) => (\n                  <div key={index} className=\"border rounded-lg p-4\">\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <div>\n                        <h4 className=\"font-semibold\">Blok {block.urutan}: {block.nama_block}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {block.soal_ids.length} soal • {block.waktu_pengerjaan_menit} menit\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"mt-3\">\n                      <p className=\"text-sm font-medium mb-2\">Subtest yang diujikan:</p>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {[...new Set(block.soal_ids.map(soalId => dummySoal.find(s => s.id === soalId)?.subtest).filter(Boolean))].map(subtest => (\n                          <span \n                            key={subtest} \n                            className=\"px-2 py-1 bg-secondary text-secondary-foreground rounded text-xs\"\n                          >\n                            {subtest?.replace(/_/g, ' ').toUpperCase()}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Instructions */}\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-yellow-800 mb-2\">⚠️ Petunjuk Demo:</h3>\n                <ul className=\"text-sm text-yellow-700 space-y-1\">\n                  <li>• Waktu pengerjaan telah diperpendek untuk keperluan demo</li>\n                  <li>• Anda dapat bernavigasi antar soal dalam satu blok</li>\n                  <li>• Ketika waktu blok habis, akan otomatis pindah ke blok selanjutnya</li>\n                  <li>• Gunakan tombol \"Ragu-ragu\" untuk menandai soal yang meragukan</li>\n                  <li>• Setelah selesai, Anda akan melihat hasil sementara</li>\n                </ul>\n              </div>\n\n              {/* Start button */}\n              <div className=\"text-center pt-4\">\n                <Button \n                  size=\"lg\" \n                  onClick={() => setIsStarted(true)}\n                  className=\"px-8\"\n                >\n                  <Play className=\"h-5 w-5 mr-2\" />\n                  Mulai Simulasi Demo\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default TryoutDemo;"],"names":["RADIO_NAME","createRadioContext","createRadioScope","createContextScope","RadioProvider","useRadioContext","Radio","React.forwardRef","props","forwardedRef","__scopeRadio","name","checked","required","disabled","value","onCheck","form","radioProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","closest","jsxs","scope","children","jsx","Primitive","type","role","getState","ref","onClick","composeEventHandlers","event","current","isPropagationStopped","stopPropagation","RadioBubbleInput","control","bubbles","style","transform","displayName","INDICATOR_NAME","RadioIndicator","forceMount","indicatorProps","context","Presence","present","span","prevChecked","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","window","HTMLInputElement","prototype","setChecked","Object","getOwnPropertyDescriptor","set","Event","call","dispatchEvent","defaultChecked","tabIndex","position","pointerEvents","opacity","margin","ARROW_KEYS","RADIO_GROUP_NAME","createRadioGroupContext","createRadioGroupScope","createContextScope2","createRovingFocusGroupScope","useRovingFocusGroupScope","useRadioScope","RadioGroupProvider","useRadioGroupContext","RadioGroup","React2.forwardRef","__scopeRadioGroup","defaultValue","valueProp","orientation","dir","loop","onValueChange","groupProps","rovingFocusGroupScope","direction","useDirection","setValue","useControllableState","prop","defaultProp","onChange","caller","jsx2","RovingFocusGroup.Root","asChild","Primitive2","div","ITEM_NAME","RadioGroupItem","itemProps","isDisabled","radioScope","React2.useRef","useComposedRefs2","isArrowKeyPressedRef","React2.useEffect","handleKeyDown","includes","key","handleKeyUp","document","addEventListener","removeEventListener","RovingFocusGroup.Item","focusable","active","onKeyDown","composeEventHandlers2","preventDefault","onFocus","_a","click","RadioGroupIndicator","Root2","Item2","Indicator","className","RadioGroupPrimitive.Root","cn","RadioGroupPrimitive.Item","RadioGroupPrimitive.Indicator","Circle","memo","soal","userAnswer","onAnswerChange","onStatusChange","pertanyaan","jawaban","entries","pilihan_jawaban","map","id","Label","htmlFor","String","Button","variant","status","size","Flag","seconds","remainingSeconds","formattedTime","Math","floor","toString","padStart","isWarning","Clock","TryoutPlayer","paketTryout","currentBlockIndex","setCurrentBlockIndex","useState","currentSoalIndex","setCurrentSoalIndex","timer","setTimer","userAnswers","setUserAnswers","isFinished","setIsFinished","results","setResults","currentBlock","useMemo","blocks","currentSoalId","soal_ids","totalBlocks","length","currentSoal","subtest","A","B","C","D","E","jawaban_benar","pembahasan","tingkat_kesulitan","kategori_kognitif","waktu_pengerjaan_detik","tags","created_at","Date","updated_at","handleFinishExam","useCallback","allResults","_","index","calculateBlockResult","handleTimeUp","prev","useEffect","waktu_pengerjaan_menit","interval","setInterval","clearInterval","navigateToSoal","blockIndex","block","blockName","totalSoal","terjawab","benar","salah","kosong","raguRagu","blockAnswers","soalId","filter","answer","nama_block","getAnswerStatus","getStatusIcon","CheckCircle","AlertCircle","Card","CardHeader","CardTitle","CardContent","result","round","judul","hours","minutes","secs","formatTime","Square","Progress","Separator","Badge","replace","toUpperCase","handleDoubtFlag","currentAnswer","waktuJawab","handleAnswerSelect","ChevronLeft","ChevronRight","dummyPaketTryout","deskripsi","urutan","subtests_included","total_waktu","total_soal","kategori","metadata","pembuat","tahun_soal","versi","published","TryoutDemo","isStarted","setIsStarted","Navigation","history","back","ArrowLeft","Set","dummySoal","find","s","Boolean","Play"],"mappings":"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","x_google_ignoreList":[0]}