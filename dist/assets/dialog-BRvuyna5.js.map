{"version":3,"file":"dialog-BRvuyna5.js","sources":["../../node_modules/@radix-ui/react-dialog/dist/index.mjs","../../src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\";\n\n// src/dialog.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContext, createContextScope } from \"@radix-ui/react-context\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { hideOthers } from \"aria-hidden\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar DIALOG_NAME = \"Dialog\";\nvar [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\nvar [DialogProvider, useDialogContext] = createDialogContext(DIALOG_NAME);\nvar Dialog = (props) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true\n  } = props;\n  const triggerRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: DIALOG_NAME\n  });\n  return /* @__PURE__ */ jsx(\n    DialogProvider,\n    {\n      scope: __scopeDialog,\n      triggerRef,\n      contentRef,\n      contentId: useId(),\n      titleId: useId(),\n      descriptionId: useId(),\n      open,\n      onOpenChange: setOpen,\n      onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n      modal,\n      children\n    }\n  );\n};\nDialog.displayName = DIALOG_NAME;\nvar TRIGGER_NAME = \"DialogTrigger\";\nvar DialogTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": context.open,\n        \"aria-controls\": context.contentId,\n        \"data-state\": getState(context.open),\n        ...triggerProps,\n        ref: composedTriggerRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nDialogTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"DialogPortal\";\nvar [PortalProvider, usePortalContext] = createDialogContext(PORTAL_NAME, {\n  forceMount: void 0\n});\nvar DialogPortal = (props) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return /* @__PURE__ */ jsx(PortalProvider, { scope: __scopeDialog, forceMount, children: React.Children.map(children, (child) => /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, container, children: child }) })) });\n};\nDialogPortal.displayName = PORTAL_NAME;\nvar OVERLAY_NAME = \"DialogOverlay\";\nvar DialogOverlay = React.forwardRef(\n  (props, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ jsx(DialogOverlayImpl, { ...overlayProps, ref: forwardedRef }) }) : null;\n  }\n);\nDialogOverlay.displayName = OVERLAY_NAME;\nvar Slot = createSlot(\"DialogOverlay.RemoveScroll\");\nvar DialogOverlayImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      /* @__PURE__ */ jsx(RemoveScroll, { as: Slot, allowPinchZoom: true, shards: [context.contentRef], children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-state\": getState(context.open),\n          ...overlayProps,\n          ref: forwardedRef,\n          style: { pointerEvents: \"auto\", ...overlayProps.style }\n        }\n      ) })\n    );\n  }\n);\nvar CONTENT_NAME = \"DialogContent\";\nvar DialogContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: context.modal ? /* @__PURE__ */ jsx(DialogContentModal, { ...contentProps, ref: forwardedRef }) : /* @__PURE__ */ jsx(DialogContentNonModal, { ...contentProps, ref: forwardedRef }) });\n  }\n);\nDialogContent.displayName = CONTENT_NAME;\nvar DialogContentModal = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n    return /* @__PURE__ */ jsx(\n      DialogContentImpl,\n      {\n        ...props,\n        ref: composedRefs,\n        trapFocus: context.open,\n        disableOutsidePointerEvents: true,\n        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        }),\n        onPointerDownOutside: composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (isRightClick) event.preventDefault();\n        }),\n        onFocusOutside: composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault()\n        )\n      }\n    );\n  }\n);\nvar DialogContentNonModal = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n    return /* @__PURE__ */ jsx(\n      DialogContentImpl,\n      {\n        ...props,\n        ref: forwardedRef,\n        trapFocus: false,\n        disableOutsidePointerEvents: false,\n        onCloseAutoFocus: (event) => {\n          props.onCloseAutoFocus?.(event);\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            event.preventDefault();\n          }\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        },\n        onInteractOutside: (event) => {\n          props.onInteractOutside?.(event);\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === \"pointerdown\") {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n          const target = event.target;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n          if (event.detail.originalEvent.type === \"focusin\" && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }\n      }\n    );\n  }\n);\nvar DialogContentImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    useFocusGuards();\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        FocusScope,\n        {\n          asChild: true,\n          loop: true,\n          trapped: trapFocus,\n          onMountAutoFocus: onOpenAutoFocus,\n          onUnmountAutoFocus: onCloseAutoFocus,\n          children: /* @__PURE__ */ jsx(\n            DismissableLayer,\n            {\n              role: \"dialog\",\n              id: context.contentId,\n              \"aria-describedby\": context.descriptionId,\n              \"aria-labelledby\": context.titleId,\n              \"data-state\": getState(context.open),\n              ...contentProps,\n              ref: composedRefs,\n              onDismiss: () => context.onOpenChange(false)\n            }\n          )\n        }\n      ),\n      /* @__PURE__ */ jsxs(Fragment, { children: [\n        /* @__PURE__ */ jsx(TitleWarning, { titleId: context.titleId }),\n        /* @__PURE__ */ jsx(DescriptionWarning, { contentRef, descriptionId: context.descriptionId })\n      ] })\n    ] });\n  }\n);\nvar TITLE_NAME = \"DialogTitle\";\nvar DialogTitle = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return /* @__PURE__ */ jsx(Primitive.h2, { id: context.titleId, ...titleProps, ref: forwardedRef });\n  }\n);\nDialogTitle.displayName = TITLE_NAME;\nvar DESCRIPTION_NAME = \"DialogDescription\";\nvar DialogDescription = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return /* @__PURE__ */ jsx(Primitive.p, { id: context.descriptionId, ...descriptionProps, ref: forwardedRef });\n  }\n);\nDialogDescription.displayName = DESCRIPTION_NAME;\nvar CLOSE_NAME = \"DialogClose\";\nvar DialogClose = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        ...closeProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))\n      }\n    );\n  }\n);\nDialogClose.displayName = CLOSE_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar TITLE_WARNING_NAME = \"DialogTitleWarning\";\nvar [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: \"dialog\"\n});\nvar TitleWarning = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n  return null;\n};\nvar DESCRIPTION_WARNING_NAME = \"DialogDescriptionWarning\";\nvar DescriptionWarning = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute(\"aria-describedby\");\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n  return null;\n};\nvar Root = Dialog;\nvar Trigger = DialogTrigger;\nvar Portal = DialogPortal;\nvar Overlay = DialogOverlay;\nvar Content = DialogContent;\nvar Title = DialogTitle;\nvar Description = DialogDescription;\nvar Close = DialogClose;\nexport {\n  Close,\n  Content,\n  Description,\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n  Overlay,\n  Portal,\n  Root,\n  Title,\n  Trigger,\n  WarningProvider,\n  createDialogScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":["DIALOG_NAME","createDialogContext","createDialogScope","createContextScope","DialogProvider","useDialogContext","Dialog","props","__scopeDialog","children","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","React.useRef","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","caller","jsx","scope","contentId","useId","titleId","descriptionId","onOpenToggle","React.useCallback","prevOpen","displayName","TRIGGER_NAME","DialogTrigger","React.forwardRef","forwardedRef","triggerProps","context","composedTriggerRef","useComposedRefs","Primitive","button","type","getState","ref","onClick","composeEventHandlers","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","DialogPortal","container","React.Children","map","child","Presence","present","PortalPrimitive","asChild","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","DialogOverlayImpl","Slot","createSlot","RemoveScroll","as","allowPinchZoom","shards","div","style","pointerEvents","CONTENT_NAME","DialogContent","contentProps","DialogContentModal","DialogContentNonModal","composedRefs","React.useEffect","content","current","hideOthers","DialogContentImpl","trapFocus","disableOutsidePointerEvents","onCloseAutoFocus","event","preventDefault","_a","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","ctrlKey","onFocusOutside","hasInteractedOutsideRef","hasPointerDownOutsideRef","call","defaultPrevented","_b","onInteractOutside","target","contains","onOpenAutoFocus","useFocusGuards","jsxs","Fragment","FocusScope","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","DismissableLayer","role","id","onDismiss","TitleWarning","DescriptionWarning","TITLE_NAME","DialogTitle","titleProps","h2","DESCRIPTION_NAME","DialogDescription","descriptionProps","p","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","createContext","contentName","titleName","docsSlug","titleWarningContext","MESSAGE","document","getElementById","describedById","getAttribute","Overlay","Content","Title","Description","Close","className","DialogPrimitive.Overlay","cn","DialogPrimitive.Content","DialogPrimitive.Close","X","DialogHeader","DialogPrimitive.Title","DialogPrimitive.Description"],"mappings":"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","x_google_ignoreList":[0]}