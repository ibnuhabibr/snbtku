{"version":3,"file":"TryoutManagement-DuMD6sls.js","sources":["../../node_modules/@radix-ui/react-checkbox/dist/index.mjs","../../src/components/ui/checkbox.tsx","../../src/pages/admin/TryoutManagement.tsx"],"sourcesContent":["\"use client\";\n\n// src/checkbox.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar CHECKBOX_NAME = \"Checkbox\";\nvar [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\nvar [CheckboxProviderImpl, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);\nfunction CheckboxProvider(props) {\n  const {\n    __scopeCheckbox,\n    checked: checkedProp,\n    children,\n    defaultChecked,\n    disabled,\n    form,\n    name,\n    onCheckedChange,\n    required,\n    value = \"on\",\n    // @ts-expect-error\n    internal_do_not_use_render\n  } = props;\n  const [checked, setChecked] = useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultChecked ?? false,\n    onChange: onCheckedChange,\n    caller: CHECKBOX_NAME\n  });\n  const [control, setControl] = React.useState(null);\n  const [bubbleInput, setBubbleInput] = React.useState(null);\n  const hasConsumerStoppedPropagationRef = React.useRef(false);\n  const isFormControl = control ? !!form || !!control.closest(\"form\") : (\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    true\n  );\n  const context = {\n    checked,\n    disabled,\n    setChecked,\n    control,\n    setControl,\n    name,\n    form,\n    value,\n    hasConsumerStoppedPropagationRef,\n    required,\n    defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked,\n    isFormControl,\n    bubbleInput,\n    setBubbleInput\n  };\n  return /* @__PURE__ */ jsx(\n    CheckboxProviderImpl,\n    {\n      scope: __scopeCheckbox,\n      ...context,\n      children: isFunction(internal_do_not_use_render) ? internal_do_not_use_render(context) : children\n    }\n  );\n}\nvar TRIGGER_NAME = \"CheckboxTrigger\";\nvar CheckboxTrigger = React.forwardRef(\n  ({ __scopeCheckbox, onKeyDown, onClick, ...checkboxProps }, forwardedRef) => {\n    const {\n      control,\n      value,\n      disabled,\n      checked,\n      required,\n      setControl,\n      setChecked,\n      hasConsumerStoppedPropagationRef,\n      isFormControl,\n      bubbleInput\n    } = useCheckboxContext(TRIGGER_NAME, __scopeCheckbox);\n    const composedRefs = useComposedRefs(forwardedRef, setControl);\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form = control?.form;\n      if (form) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form.addEventListener(\"reset\", reset);\n        return () => form.removeEventListener(\"reset\", reset);\n      }\n    }, [control, setChecked]);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        role: \"checkbox\",\n        \"aria-checked\": isIndeterminate(checked) ? \"mixed\" : checked,\n        \"aria-required\": required,\n        \"data-state\": getState(checked),\n        \"data-disabled\": disabled ? \"\" : void 0,\n        disabled,\n        value,\n        ...checkboxProps,\n        ref: composedRefs,\n        onKeyDown: composeEventHandlers(onKeyDown, (event) => {\n          if (event.key === \"Enter\") event.preventDefault();\n        }),\n        onClick: composeEventHandlers(onClick, (event) => {\n          setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);\n          if (bubbleInput && isFormControl) {\n            hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n            if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n          }\n        })\n      }\n    );\n  }\n);\nCheckboxTrigger.displayName = TRIGGER_NAME;\nvar Checkbox = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      value,\n      onCheckedChange,\n      form,\n      ...checkboxProps\n    } = props;\n    return /* @__PURE__ */ jsx(\n      CheckboxProvider,\n      {\n        __scopeCheckbox,\n        checked,\n        defaultChecked,\n        disabled,\n        required,\n        onCheckedChange,\n        name,\n        form,\n        value,\n        internal_do_not_use_render: ({ isFormControl }) => /* @__PURE__ */ jsxs(Fragment, { children: [\n          /* @__PURE__ */ jsx(\n            CheckboxTrigger,\n            {\n              ...checkboxProps,\n              ref: forwardedRef,\n              __scopeCheckbox\n            }\n          ),\n          isFormControl && /* @__PURE__ */ jsx(\n            CheckboxBubbleInput,\n            {\n              __scopeCheckbox\n            }\n          )\n        ] })\n      }\n    );\n  }\n);\nCheckbox.displayName = CHECKBOX_NAME;\nvar INDICATOR_NAME = \"CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return /* @__PURE__ */ jsx(\n      Presence,\n      {\n        present: forceMount || isIndeterminate(context.checked) || context.checked === true,\n        children: /* @__PURE__ */ jsx(\n          Primitive.span,\n          {\n            \"data-state\": getState(context.checked),\n            \"data-disabled\": context.disabled ? \"\" : void 0,\n            ...indicatorProps,\n            ref: forwardedRef,\n            style: { pointerEvents: \"none\", ...props.style }\n          }\n        )\n      }\n    );\n  }\n);\nCheckboxIndicator.displayName = INDICATOR_NAME;\nvar BUBBLE_INPUT_NAME = \"CheckboxBubbleInput\";\nvar CheckboxBubbleInput = React.forwardRef(\n  ({ __scopeCheckbox, ...props }, forwardedRef) => {\n    const {\n      control,\n      hasConsumerStoppedPropagationRef,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      name,\n      value,\n      form,\n      bubbleInput,\n      setBubbleInput\n    } = useCheckboxContext(BUBBLE_INPUT_NAME, __scopeCheckbox);\n    const composedRefs = useComposedRefs(forwardedRef, setBubbleInput);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = bubbleInput;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      const bubbles = !hasConsumerStoppedPropagationRef.current;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        input.indeterminate = isIndeterminate(checked);\n        setChecked.call(input, isIndeterminate(checked) ? false : checked);\n        input.dispatchEvent(event);\n      }\n    }, [bubbleInput, prevChecked, checked, hasConsumerStoppedPropagationRef]);\n    const defaultCheckedRef = React.useRef(isIndeterminate(checked) ? false : checked);\n    return /* @__PURE__ */ jsx(\n      Primitive.input,\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: defaultChecked ?? defaultCheckedRef.current,\n        required,\n        disabled,\n        name,\n        value,\n        form,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0,\n          // We transform because the input is absolutely positioned but we have\n          // rendered it **after** the button. This pulls it back to sit on top\n          // of the button.\n          transform: \"translateX(-100%)\"\n        }\n      }\n    );\n  }\n);\nCheckboxBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction getState(checked) {\n  return isIndeterminate(checked) ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\";\n}\nexport {\n  Checkbox,\n  CheckboxIndicator,\n  CheckboxIndicator as Indicator,\n  Checkbox as Root,\n  createCheckboxScope,\n  CheckboxBubbleInput as unstable_BubbleInput,\n  CheckboxBubbleInput as unstable_CheckboxBubbleInput,\n  CheckboxProvider as unstable_CheckboxProvider,\n  CheckboxTrigger as unstable_CheckboxTrigger,\n  CheckboxProvider as unstable_Provider,\n  CheckboxTrigger as unstable_Trigger\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { \n  Plus, \n  Trash2, \n  Search, \n  // Filter, // Removed unused import\n  Clock,\n  FileText,\n  Save,\n  Eye,\n  Settings\n} from \"lucide-react\";\nimport AdminNavigation from \"@/components/AdminNavigation\";\nimport { ITryoutPackageSNBT, ITryoutBlock, ISoal, TSubtestSNBT } from \"@/types/konten\";\nimport { dummySoal } from '@/data/dummySoal';\n\n// Data bank soal dari file dummy\nconst mockBankSoal: ISoal[] = dummySoal;\n\nconst subtestOptions: TSubtestSNBT[] = [\n  \"Penalaran Umum\",\n  \"Pengetahuan & Pemahaman Umum\",\n  \"Pemahaman Bacaan & Menulis\",\n  \"Pengetahuan Kuantitatif\",\n  \"Literasi B. Indonesia\",\n  \"Literasi B. Inggris\",\n  \"Penalaran Matematika\"\n];\n\ninterface BlockFormData extends Omit<ITryoutBlock, 'soal_ids' | 'subtests_included'> {\n  soal_ids: string[];\n  subtests_included: TSubtestSNBT[];\n}\n\nconst TryoutManagement = () => {\n  // State untuk form paket utama\n  const [packageForm, setPackageForm] = useState({\n    id: \"\",\n    judul: \"\",\n    deskripsi: \"\",\n    tingkat_kesulitan: \"Campuran\" as const\n  });\n\n  // State untuk blok-blok\n  const [blocks, setBlocks] = useState<BlockFormData[]>([]);\n\n  // State untuk modal pemilihan soal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentBlockIndex, setCurrentBlockIndex] = useState<number | null>(null);\n  const [selectedSoals, setSelectedSoals] = useState<string[]>([]);\n  const [filterSubtest, setFilterSubtest] = useState<string>(\"all\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Filter soal berdasarkan subtest dan search\n  const filteredSoals = mockBankSoal.filter(soal => {\n    const matchSubtest = filterSubtest === \"all\" || soal.subtest === filterSubtest;\n    const matchSearch = soal.pertanyaan.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                       soal.id.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchSubtest && matchSearch;\n  });\n\n  // Statistik soal per subtest\n  // const jumlahSoalPerSubtest = getJumlahSoalPerSubtest(); // Removed unused variable\n\n  // Fungsi untuk menambah blok baru\n  const addNewBlock = () => {\n    const newBlock: BlockFormData = {\n      urutan: blocks.length + 1,\n      nama_block: \"\",\n      deskripsi: \"\",\n      waktu_pengerjaan_menit: 0,\n      soal_ids: [],\n      instruksi_khusus: \"\",\n      break_setelah_blok: 0,\n      subtests_included: []\n    };\n    setBlocks([...blocks, newBlock]);\n  };\n\n  // Fungsi untuk menghapus blok\n  const removeBlock = (index: number) => {\n    const updatedBlocks = blocks.filter((_, i) => i !== index);\n    // Update urutan blok\n    const reorderedBlocks = updatedBlocks.map((block, i) => ({\n      ...block,\n      urutan: i + 1\n    }));\n    setBlocks(reorderedBlocks);\n  };\n\n  // Fungsi untuk update data blok\n  const updateBlock = (index: number, field: keyof BlockFormData, value: any) => {\n    const updatedBlocks = [...blocks];\n    updatedBlocks[index] = {\n      ...updatedBlocks[index],\n      [field]: value,\n      soal_ids: updatedBlocks[index]?.soal_ids || [],\n      subtests_included: updatedBlocks[index]?.subtests_included || []\n    } as BlockFormData;\n    setBlocks(updatedBlocks);\n  };\n\n  // Fungsi untuk membuka modal pemilihan soal\n  const openSoalModal = (blockIndex: number) => {\n    setCurrentBlockIndex(blockIndex);\n    setSelectedSoals(blocks[blockIndex]?.soal_ids || []);\n    setIsModalOpen(true);\n  };\n\n  // Fungsi untuk menyimpan pilihan soal\n  const saveSoalSelection = () => {\n    if (currentBlockIndex !== null) {\n      const selectedSoalObjects = mockBankSoal.filter(soal => selectedSoals.includes(soal.id));\n      const subtestsIncluded = [...new Set(selectedSoalObjects.map(soal => soal.subtest))] as TSubtestSNBT[];\n      \n      updateBlock(currentBlockIndex, 'soal_ids', selectedSoals);\n      updateBlock(currentBlockIndex, 'subtests_included', subtestsIncluded);\n    }\n    setIsModalOpen(false);\n    setCurrentBlockIndex(null);\n  };\n\n  // Fungsi untuk toggle pilihan soal\n  const toggleSoalSelection = (soalId: string) => {\n    setSelectedSoals(prev => \n      prev.includes(soalId) \n        ? prev.filter(id => id !== soalId)\n        : [...prev, soalId]\n    );\n  };\n\n  // Fungsi untuk menyimpan paket try out\n  const savePackage = () => {\n    // Validasi form\n    if (!packageForm.id || !packageForm.judul) {\n      alert(\"ID dan Judul paket harus diisi!\");\n      return;\n    }\n\n    if (blocks.length === 0) {\n      alert(\"Minimal harus ada satu blok pengerjaan!\");\n      return;\n    }\n\n    // Validasi setiap blok\n    for (let i = 0; i < blocks.length; i++) {\n      const block = blocks[i];\n      if (!block?.nama_block || (block?.waktu_pengerjaan_menit || 0) <= 0) {\n        alert(`Blok ${i + 1}: Nama blok dan waktu pengerjaan harus diisi dengan benar!`);\n        return;\n      }\n      if ((block?.soal_ids || []).length === 0) {\n        alert(`Blok ${i + 1}: Harus memilih minimal satu soal!`);\n        return;\n      }\n    }\n\n    // Buat objek ITryoutPackageSNBT\n    const totalWaktu = blocks.reduce((sum, block) => sum + block.waktu_pengerjaan_menit, 0);\n    const totalSoal = blocks.reduce((sum, block) => sum + block.soal_ids.length, 0);\n\n    const tryoutPackage: ITryoutPackageSNBT = {\n      id: packageForm.id,\n      judul: packageForm.judul,\n      deskripsi: packageForm.deskripsi,\n      total_waktu: totalWaktu,\n      total_soal: totalSoal,\n      blocks: blocks.map(block => ({\n        urutan: block.urutan,\n        nama_block: block.nama_block,\n        deskripsi: block.deskripsi,\n        waktu_pengerjaan_menit: block.waktu_pengerjaan_menit,\n        soal_ids: block.soal_ids,\n        instruksi_khusus: block.instruksi_khusus || '',\n        break_setelah_blok: block.break_setelah_blok || 0,\n        subtests_included: block.subtests_included\n      })),\n      tingkat_kesulitan: packageForm.tingkat_kesulitan,\n      kategori: \"Simulasi Lengkap\",\n      metadata: {\n        pembuat: \"Admin\",\n        tahun_soal: new Date().getFullYear(),\n        versi: \"1.0\",\n        tags: [\"simulasi\", \"utbk\", \"snbt\"]\n      },\n      published: false,\n      created_at: new Date(),\n      updated_at: new Date()\n    };\n\n    console.log(\"Paket Try Out SNBT berhasil dibuat:\", tryoutPackage);\n    alert(\"Paket Try Out berhasil disimpan! Lihat console untuk detail struktur data.\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <AdminNavigation />\n      \n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Manajemen Try Out SNBT</h1>\n          <p className=\"text-gray-600\">Buat dan kelola paket simulasi UTBK-SNBT dengan sistem blok pengerjaan</p>\n        </div>\n\n        {/* Form Paket Utama */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Settings className=\"h-5 w-5\" />\n              Informasi Paket Try Out\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"package-id\">ID Paket *</Label>\n                <Input\n                  id=\"package-id\"\n                  placeholder=\"Contoh: SNBT-SIM-01\"\n                  value={packageForm.id}\n                  onChange={(e) => setPackageForm(prev => ({ ...prev, id: e.target.value }))}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"package-title\">Judul Paket *</Label>\n                <Input\n                  id=\"package-title\"\n                  placeholder=\"Contoh: Simulasi UTBK-SNBT Premium #1\"\n                  value={packageForm.judul}\n                  onChange={(e) => setPackageForm(prev => ({ ...prev, judul: e.target.value }))}\n                />\n              </div>\n            </div>\n            <div>\n              <Label htmlFor=\"package-description\">Deskripsi</Label>\n              <Textarea\n                id=\"package-description\"\n                placeholder=\"Deskripsi singkat tentang paket try out ini...\"\n                value={packageForm.deskripsi}\n                onChange={(e) => setPackageForm(prev => ({ ...prev, deskripsi: e.target.value }))}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"difficulty\">Tingkat Kesulitan</Label>\n              <Select value={packageForm.tingkat_kesulitan} onValueChange={(value: any) => setPackageForm(prev => ({ ...prev, tingkat_kesulitan: value }))}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"Mudah\">Mudah</SelectItem>\n                  <SelectItem value=\"Sedang\">Sedang</SelectItem>\n                  <SelectItem value=\"Sulit\">Sulit</SelectItem>\n                  <SelectItem value=\"Campuran\">Campuran</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Builder untuk Blok */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Blok Pengerjaan ({blocks.length})\n              </div>\n              <Button onClick={addNewBlock} className=\"flex items-center gap-2\">\n                <Plus className=\"h-4 w-4\" />\n                Tambah Blok Pengerjaan\n              </Button>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {blocks.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <FileText className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>Belum ada blok pengerjaan. Klik \"Tambah Blok Pengerjaan\" untuk memulai.</p>\n              </div>\n            ) : (\n              <div className=\"space-y-6\">\n                {blocks.map((block, index) => (\n                  <Card key={index} className=\"border-l-4 border-l-blue-500\">\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center justify-between text-lg\">\n                        <span>Blok {block.urutan}</span>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => removeBlock(index)}\n                          className=\"text-red-600 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                        <div>\n                          <Label>Urutan Blok</Label>\n                          <Input\n                            type=\"number\"\n                            value={block.urutan}\n                            onChange={(e) => updateBlock(index, 'urutan', parseInt(e.target.value) || 1)}\n                            min=\"1\"\n                          />\n                        </div>\n                        <div>\n                          <Label>Nama Blok *</Label>\n                          <Input\n                            placeholder=\"Contoh: TPS atau Literasi & Penalaran Matematika\"\n                            value={block.nama_block}\n                            onChange={(e) => updateBlock(index, 'nama_block', e.target.value)}\n                          />\n                        </div>\n                        <div>\n                          <Label>Waktu Pengerjaan (menit) *</Label>\n                          <Input\n                            type=\"number\"\n                            value={block.waktu_pengerjaan_menit}\n                            onChange={(e) => updateBlock(index, 'waktu_pengerjaan_menit', parseInt(e.target.value) || 0)}\n                            min=\"1\"\n                          />\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <Label>Deskripsi Blok</Label>\n                        <Textarea\n                          placeholder=\"Deskripsi singkat tentang blok ini...\"\n                          value={block.deskripsi}\n                          onChange={(e) => updateBlock(index, 'deskripsi', e.target.value)}\n                        />\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                          <Label>Instruksi Khusus</Label>\n                          <Textarea\n                            placeholder=\"Instruksi khusus untuk blok ini...\"\n                            value={block.instruksi_khusus}\n                            onChange={(e) => updateBlock(index, 'instruksi_khusus', e.target.value)}\n                          />\n                        </div>\n                        <div>\n                          <Label>Waktu Istirahat Setelah Blok (menit)</Label>\n                          <Input\n                            type=\"number\"\n                            value={block.break_setelah_blok}\n                            onChange={(e) => updateBlock(index, 'break_setelah_blok', parseInt(e.target.value) || 0)}\n                            min=\"0\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* Pemilihan Soal */}\n                      <div className=\"border-t pt-4\">\n                        <div className=\"flex items-center justify-between mb-4\">\n                          <div>\n                            <h4 className=\"font-medium\">Soal dalam Blok</h4>\n                            <p className=\"text-sm text-gray-600\">\n                              {block.soal_ids.length} soal dipilih\n                              {block.subtests_included.length > 0 && (\n                                <span className=\"ml-2\">\n                                  • Subtest: {block.subtests_included.join(\", \")}\n                                </span>\n                              )}\n                            </p>\n                          </div>\n                          <Button\n                            variant=\"outline\"\n                            onClick={() => openSoalModal(index)}\n                            className=\"flex items-center gap-2\"\n                          >\n                            <Search className=\"h-4 w-4\" />\n                            Pilih Soal\n                          </Button>\n                        </div>\n                        \n                        {block.soal_ids.length > 0 && (\n                          <div className=\"flex flex-wrap gap-2\">\n                            {block.soal_ids.map(soalId => {\n                              const soal = mockBankSoal.find(s => s.id === soalId);\n                              return soal ? (\n                                <Badge key={soalId} variant=\"secondary\" className=\"text-xs\">\n                                  {soal.id} - {soal.subtest}\n                                </Badge>\n                              ) : null;\n                            })}\n                          </div>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Ringkasan dan Tombol Simpan */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Eye className=\"h-5 w-5\" />\n              Ringkasan Paket\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n              <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-600\">{blocks.length}</div>\n                <div className=\"text-sm text-gray-600\">Total Blok</div>\n              </div>\n              <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {blocks.reduce((sum, block) => sum + block.soal_ids.length, 0)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Total Soal</div>\n              </div>\n              <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-purple-600 flex items-center justify-center gap-1\">\n                  <Clock className=\"h-5 w-5\" />\n                  {blocks.reduce((sum, block) => sum + block.waktu_pengerjaan_menit, 0)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Total Waktu (menit)</div>\n              </div>\n              <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-orange-600\">\n                  {blocks.reduce((sum, block) => sum + (block.break_setelah_blok || 0), 0)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Total Istirahat (menit)</div>\n              </div>\n            </div>\n            \n            <Button \n              onClick={savePackage} \n              className=\"w-full flex items-center justify-center gap-2\"\n              size=\"lg\"\n            >\n              <Save className=\"h-5 w-5\" />\n              Simpan Paket Try Out\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Modal Pemilihan Soal */}\n      <Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>\n        <DialogContent className=\"max-w-6xl max-h-[80vh] overflow-hidden\">\n          <DialogHeader>\n            <DialogTitle>Pilih Soal untuk Blok {currentBlockIndex !== null ? blocks[currentBlockIndex]?.urutan : ''}</DialogTitle>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            {/* Filter dan Search */}\n            <div className=\"flex gap-4\">\n              <div className=\"flex-1\">\n                <Input\n                  placeholder=\"Cari soal berdasarkan ID atau pertanyaan...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full\"\n                />\n              </div>\n              <Select value={filterSubtest} onValueChange={setFilterSubtest}>\n                <SelectTrigger className=\"w-64\">\n                  <SelectValue placeholder=\"Filter Subtest\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Semua Subtest</SelectItem>\n                  {subtestOptions.map(subtest => (\n                    <SelectItem key={subtest} value={subtest}>{subtest}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Counter */}\n            <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n              <span className=\"text-sm font-medium\">\n                {selectedSoals.length} soal dipilih dari {filteredSoals.length} soal tersedia\n              </span>\n              <div className=\"flex gap-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setSelectedSoals([])}\n                >\n                  Hapus Semua\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setSelectedSoals(filteredSoals.map(s => s.id))}\n                >\n                  Pilih Semua\n                </Button>\n              </div>\n            </div>\n\n            {/* Tabel Soal */}\n            <div className=\"border rounded-lg overflow-hidden max-h-96 overflow-y-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"w-12\">Pilih</TableHead>\n                    <TableHead>ID Soal</TableHead>\n                    <TableHead>Subtest</TableHead>\n                    <TableHead>Pertanyaan</TableHead>\n                    <TableHead>Kesulitan</TableHead>\n                    <TableHead>Waktu (detik)</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredSoals.map(soal => (\n                    <TableRow key={soal.id}>\n                      <TableCell>\n                        <Checkbox\n                          checked={selectedSoals.includes(soal.id)}\n                          onCheckedChange={() => toggleSoalSelection(soal.id)}\n                        />\n                      </TableCell>\n                      <TableCell className=\"font-mono text-sm\">{soal.id}</TableCell>\n                      <TableCell>\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {soal.subtest}\n                        </Badge>\n                      </TableCell>\n                      <TableCell className=\"max-w-md truncate\">{soal.pertanyaan}</TableCell>\n                      <TableCell>\n                        <Badge \n                          variant={soal.tingkat_kesulitan === 'HOTS' ? 'destructive' : 'secondary'}\n                          className=\"text-xs\"\n                        >\n                          {soal.tingkat_kesulitan}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>{soal.waktu_pengerjaan_detik}s</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n\n            {/* Tombol Aksi */}\n            <div className=\"flex justify-end gap-2 pt-4 border-t\">\n              <Button variant=\"outline\" onClick={() => setIsModalOpen(false)}>\n                Batal\n              </Button>\n              <Button onClick={saveSoalSelection}>\n                Simpan Pilihan ({selectedSoals.length} soal)\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default TryoutManagement;"],"names":["CHECKBOX_NAME","createCheckboxContext","createCheckboxScope","createContextScope","CheckboxProviderImpl","useCheckboxContext","CheckboxProvider","props","__scopeCheckbox","checked","checkedProp","children","defaultChecked","disabled","form","name","onCheckedChange","required","value","internal_do_not_use_render","setChecked","useControllableState","prop","defaultProp","onChange","caller","control","setControl","React.useState","bubbleInput","setBubbleInput","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","closest","context","isIndeterminate","jsx","scope","isFunction","TRIGGER_NAME","CheckboxTrigger","React.forwardRef","onKeyDown","onClick","checkboxProps","forwardedRef","composedRefs","useComposedRefs","initialCheckedStateRef","React.useEffect","reset","current","addEventListener","removeEventListener","Primitive","button","type","role","getState","ref","composeEventHandlers","event","key","preventDefault","prevChecked","isPropagationStopped","stopPropagation","displayName","Checkbox","jsxs","Fragment","CheckboxBubbleInput","INDICATOR_NAME","CheckboxIndicator","forceMount","indicatorProps","Presence","present","span","style","pointerEvents","BUBBLE_INPUT_NAME","usePrevious","controlSize","useSize","input","inputProto","window","HTMLInputElement","prototype","Object","getOwnPropertyDescriptor","set","bubbles","Event","indeterminate","call","dispatchEvent","defaultCheckedRef","tabIndex","position","opacity","margin","transform","className","CheckboxPrimitive.Root","cn","CheckboxPrimitive.Indicator","Check","mockBankSoal","dummySoal","subtestOptions","TryoutManagement","packageForm","setPackageForm","useState","id","judul","deskripsi","tingkat_kesulitan","blocks","setBlocks","isModalOpen","setIsModalOpen","currentBlockIndex","setCurrentBlockIndex","selectedSoals","setSelectedSoals","filterSubtest","setFilterSubtest","searchQuery","setSearchQuery","filteredSoals","filter","soal","matchSubtest","subtest","matchSearch","pertanyaan","toLowerCase","includes","updateBlock","index","field","updatedBlocks","soal_ids","_a","subtests_included","_b","AdminNavigation","Card","CardHeader","CardTitle","Settings","CardContent","Label","htmlFor","Input","placeholder","e","prev","target","Textarea","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","FileText","length","Button","newBlock","urutan","nama_block","waktu_pengerjaan_menit","instruksi_khusus","break_setelah_blok","Plus","map","block","variant","size","reorderedBlocks","_","i","removeBlock","Trash2","parseInt","min","join","openSoalModal","blockIndex","Search","soalId","find","s","Badge","Eye","reduce","sum","Clock","alert","Date","getFullYear","Save","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","toggleSoalSelection","waktu_pengerjaan_detik","selectedSoalObjects","subtestsIncluded","Set"],"mappings":"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","x_google_ignoreList":[0]}