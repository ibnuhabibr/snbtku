{"version":3,"file":"proxy-GZF3NXPi.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isObject","value","isZeroValueString","memo","callback","result","noop","any","combineFunctions","a","b","pipe","transformers","reduce","progress","from","to","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","_a","_b","transformer","map","hueToRgb","q","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","makeAnimationInstant","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","HTMLElement","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","isNone","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","getValueAsType","isHTMLElement","MotionValue","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","microtask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","isSVGElement","isMotionValue","valueTypes","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","safeToRemove","useCallback","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","scaleCorrectors","isForcedMotionValue","layoutId","translateAlias","numTransforms","buildHTMLStyles","latestValues","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","visualState","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","styleProp","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","Component","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","children","renderedChildren","getValueState","resolveVariantFromProps","custom","resolveMotionValue","makeLatestValues","presenceContext","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","renderState","makeState","prevProps","newValues","liveStyle","useHTMLVisualState","scrapeMotionValuesFromProps$1","charAt","toUpperCase","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","instance","onMount","mount","unmount","camelToDash","str","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","scheduleRenderMicrotask","animationState","animateChanges","MotionHandoffMarkAsComplete","enteringChildren","allowProjection","createMotionComponent","preloadedFeatures","features","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","createMotionProxy","Proxy","componentCache","factory","_target","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","initPrefersReducedMotion","addChild","remove","removeChild","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","prevPresenceContext","listener","nextValue","prevValue","addValue","hasValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getDefaultTransition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","DOMVisualElement","arguments","compareDocumentPosition","childSubscription","textContent","renderHTML","elementStyle","applyProjectionStyles","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","resolveVariant","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevIsPresent","exitAnimation","addDomEvent","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","_c","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","motion","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251]}