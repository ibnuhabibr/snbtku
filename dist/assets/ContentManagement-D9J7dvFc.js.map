{"version":3,"file":"ContentManagement-D9J7dvFc.js","sources":["../../src/pages/admin/ContentManagement.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { \n  Search,\n  Filter,\n  Plus,\n  Edit,\n  Trash2,\n  Eye,\n  Download,\n  Upload,\n  FileText,\n  Target,\n  MoreHorizontal,\n  Calendar,\n  Users,\n  Clock,\n  Save,\n  X\n} from \"lucide-react\";\nimport AdminNavigation from \"@/components/AdminNavigation\";\nimport { adminService, Question, QuestionFormData, TryoutPackage, TryoutPackageFormData } from \"@/services/adminService\";\nimport { useToast } from \"@/hooks/use-toast\";\n\n// Interfaces are now imported from adminService\n\nconst ContentManagement = () => {\n  const [activeTab, setActiveTab] = useState(\"questions\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [filterSubject, setFilterSubject] = useState(\"all\");\n  // const [loading, setLoading] = useState(false); // Removed unused variable\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [tryoutPackages, setTryoutPackages] = useState<TryoutPackage[]>([]);\n  const [isQuestionDialogOpen, setIsQuestionDialogOpen] = useState(false);\n  const [isTryoutDialogOpen, setIsTryoutDialogOpen] = useState(false);\n  const [editingQuestion, setEditingQuestion] = useState<Question | null>(null);\n  const [editingTryout, setEditingTryout] = useState<TryoutPackage | null>(null);\n  const { toast } = useToast();\n\n  // Load data on component mount\n  useEffect(() => {\n    loadQuestions();\n    loadTryoutPackages();\n  }, []);\n\n  const loadQuestions = async () => {\n    try {\n      const response = await adminService.getQuestions();\n      setQuestions(response.questions || []);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load questions\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const loadTryoutPackages = async () => {\n    try {\n      const response = await adminService.getTryoutPackages();\n      setTryoutPackages(response.packages || []);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load tryout packages\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleCreateQuestion = async (data: QuestionFormData) => {\n    try {\n      await adminService.createQuestion(data);\n      toast({\n        title: \"Success\",\n        description: \"Question created successfully\"\n      });\n      setIsQuestionDialogOpen(false);\n      loadQuestions();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to create question\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleUpdateQuestion = async (id: string, data: QuestionFormData) => {\n    try {\n      await adminService.updateQuestion(id, data);\n      toast({\n        title: \"Success\",\n        description: \"Question updated successfully\"\n      });\n      setEditingQuestion(null);\n      loadQuestions();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update question\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleDeleteQuestion = async (id: string) => {\n    if (!confirm('Are you sure you want to delete this question?')) return;\n    \n    try {\n      await adminService.deleteQuestion(id);\n      toast({\n        title: \"Success\",\n        description: \"Question deleted successfully\"\n      });\n      loadQuestions();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete question\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleCreateTryoutPackage = async (data: TryoutPackageFormData) => {\n    try {\n      await adminService.createTryoutPackage(data);\n      toast({\n        title: \"Success\",\n        description: \"Tryout package created successfully\"\n      });\n      setIsTryoutDialogOpen(false);\n      loadTryoutPackages();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to create tryout package\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleUpdateTryoutPackage = async (id: string, data: TryoutPackageFormData) => {\n    try {\n      await adminService.updateTryoutPackage(id, data);\n      toast({\n        title: \"Success\",\n        description: \"Tryout package updated successfully\"\n      });\n      setEditingTryout(null);\n      loadTryoutPackages();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update tryout package\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleDeleteTryoutPackage = async (id: string) => {\n    if (!confirm('Are you sure you want to delete this tryout package?')) return;\n    \n    try {\n      await adminService.deleteTryoutPackage(id);\n      toast({\n        title: \"Success\",\n        description: \"Tryout package deleted successfully\"\n      });\n      loadTryoutPackages();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete tryout package\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  // Filter functions\n  const filteredQuestions = questions.filter(question => {\n    const matchesSearch = question.question_text.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         question.subject.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesStatus = filterStatus === 'all' || question.review_status === filterStatus;\n    const matchesSubject = filterSubject === 'all' || question.subject === filterSubject;\n    return matchesSearch && matchesStatus && matchesSubject;\n  });\n\n  const filteredTryoutPackages = tryoutPackages.filter(pkg => {\n    const matchesSearch = pkg.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         (pkg.description || '').toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesStatus = filterStatus === 'all' || (pkg.is_active ? 'active' : 'inactive') === filterStatus;\n    return matchesSearch && matchesStatus;\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"approved\":\n      case \"active\":\n        return \"bg-green-100 text-green-800\";\n      case \"draft\":\n      case \"pending\":\n        return \"bg-yellow-100 text-yellow-800\";\n      case \"rejected\":\n      case \"inactive\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty?.toLowerCase()) {\n      case \"easy\":\n        return \"bg-green-100 text-green-800\";\n      case \"medium\":\n        return \"bg-yellow-100 text-yellow-800\";\n      case \"hard\":\n        return \"bg-red-100 text-red-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const getSubjectColor = (subject: string) => {\n    switch (subject?.toLowerCase()) {\n      case \"tps\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"literasi\":\n        return \"bg-green-100 text-green-800\";\n      case \"matematika\":\n        return \"bg-purple-100 text-purple-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-primary/5 to-accent/5\">\n      {/* Header */}\n      <AdminNavigation />\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 pt-24 md:pt-20\">\n        {/* Header Section */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">Content Management ðŸ“š</h1>\n          <p className=\"text-muted-foreground\">Kelola semua konten pembelajaran, soal, dan try out</p>\n        </div>\n\n        {/* Filters */}\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Filter className=\"h-5 w-5\" />\n              Filter & Pencarian\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Cari konten...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n              <Select value={filterStatus} onValueChange={setFilterStatus}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Semua Status</SelectItem>\n                  <SelectItem value=\"approved\">Approved</SelectItem>\n                  <SelectItem value=\"draft\">Draft</SelectItem>\n                  <SelectItem value=\"pending\">Pending</SelectItem>\n                  <SelectItem value=\"active\">Active</SelectItem>\n                  <SelectItem value=\"inactive\">Inactive</SelectItem>\n                  <SelectItem value=\"rejected\">Rejected</SelectItem>\n                </SelectContent>\n              </Select>\n              <Select value={filterSubject} onValueChange={setFilterSubject}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Subject\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Semua Subject</SelectItem>\n                  <SelectItem value=\"tps\">TPS</SelectItem>\n                  <SelectItem value=\"literasi\">Literasi</SelectItem>\n                  <SelectItem value=\"matematika\">Matematika</SelectItem>\n                </SelectContent>\n              </Select>\n              <div className=\"flex gap-2\">\n                <Button variant=\"outline\" size=\"sm\">\n                  <Upload className=\"h-4 w-4 mr-1\" />\n                  Import\n                </Button>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Download className=\"h-4 w-4 mr-1\" />\n                  Export\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Tabs value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"questions\">Soal</TabsTrigger>\n            <TabsTrigger value=\"tryouts\">Try Out Packages</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"questions\" className=\"mt-6\">\n            <Card>\n              <CardHeader>\n                <div className=\"flex justify-between items-center\">\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <FileText className=\"h-5 w-5\" />\n                    Manajemen Soal\n                  </CardTitle>\n                  <Dialog open={isQuestionDialogOpen} onOpenChange={setIsQuestionDialogOpen}>\n                    <DialogTrigger asChild>\n                      <Button>\n                        <Plus className=\"h-4 w-4 mr-1\" />\n                        Tambah Soal\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"max-w-2xl\">\n                      <DialogHeader>\n                        <DialogTitle>Tambah Soal Baru</DialogTitle>\n                      </DialogHeader>\n                      <QuestionForm onSubmit={handleCreateQuestion} onCancel={() => setIsQuestionDialogOpen(false)} />\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Pertanyaan</TableHead>\n                      <TableHead>Subject</TableHead>\n                      <TableHead>Sub Topic</TableHead>\n                      <TableHead>Difficulty</TableHead>\n                      <TableHead>Type</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Created</TableHead>\n                      <TableHead>Aksi</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {filteredQuestions.map((question) => (\n                      <TableRow key={question.id}>\n                        <TableCell className=\"font-medium max-w-xs truncate\">\n                          {question.question_text}\n                        </TableCell>\n                        <TableCell>\n                          <Badge className={getSubjectColor(question.subject)}>\n                            {question.subject}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>{question.sub_topic || '-'}</TableCell>\n                        <TableCell>\n                          <Badge className={getDifficultyColor(question.difficulty_level)}>\n                            {question.difficulty_level}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>{question.question_type}</TableCell>\n                        <TableCell>\n                          <Badge className={getStatusColor(question.review_status)}>\n                            {question.review_status}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>{new Date(question.created_at).toLocaleDateString()}</TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-1\">\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => setEditingQuestion(question)}>\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => handleDeleteQuestion(question.id)}>\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"tryouts\" className=\"mt-6\">\n            <Card>\n              <CardHeader>\n                <div className=\"flex justify-between items-center\">\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Target className=\"h-5 w-5\" />\n                    Manajemen Tryout Packages\n                  </CardTitle>\n                  <Dialog open={isTryoutDialogOpen} onOpenChange={setIsTryoutDialogOpen}>\n                    <DialogTrigger asChild>\n                      <Button>\n                        <Plus className=\"h-4 w-4 mr-1\" />\n                        Tambah Package\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"max-w-2xl\">\n                      <DialogHeader>\n                        <DialogTitle>Tambah Tryout Package Baru</DialogTitle>\n                      </DialogHeader>\n                      <TryoutPackageForm onSubmit={handleCreateTryoutPackage} onCancel={() => setIsTryoutDialogOpen(false)} />\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Title</TableHead>\n                      <TableHead>Category</TableHead>\n                      <TableHead>Difficulty</TableHead>\n                      <TableHead>Questions</TableHead>\n                      <TableHead>Duration</TableHead>\n                      <TableHead>Price</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Created</TableHead>\n                      <TableHead>Aksi</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {filteredTryoutPackages.map((pkg) => (\n                      <TableRow key={pkg.id}>\n                        <TableCell className=\"font-medium\">{pkg.title}</TableCell>\n                        <TableCell>\n                          <Badge className=\"bg-blue-100 text-blue-800\">\n                            {pkg.category}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          <Badge className={getDifficultyColor(pkg.difficulty_level)}>\n                            {pkg.difficulty_level}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>{pkg.total_questions}</TableCell>\n                        <TableCell>{pkg.duration_minutes} min</TableCell>\n                        <TableCell>Rp {pkg.price.toLocaleString()}</TableCell>\n                        <TableCell>\n                          <Badge className={getStatusColor(pkg.is_active ? 'active' : 'inactive')}>\n                            {pkg.is_active ? 'Active' : 'Inactive'}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>{new Date(pkg.created_at).toLocaleDateString()}</TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-1\">\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => setEditingTryout(pkg)}>\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => handleDeleteTryoutPackage(pkg.id)}>\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                           </div>\n                         </TableCell>\n                       </TableRow>\n                     ))}\n                   </TableBody>\n                 </Table>\n               </CardContent>\n             </Card>\n           </TabsContent>\n\n          <TabsContent value=\"tryouts\" className=\"mt-6\">\n            <Card>\n              <CardHeader>\n                <div className=\"flex justify-between items-center\">\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Target className=\"h-5 w-5\" />\n                    Manajemen Try Out\n                  </CardTitle>\n                  <Button>\n                    <Plus className=\"h-4 w-4 mr-1\" />\n                    Buat Try Out\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Judul</TableHead>\n                      <TableHead>Durasi</TableHead>\n                      <TableHead>Soal</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Jadwal</TableHead>\n                      <TableHead>Peserta</TableHead>\n                      <TableHead>Aksi</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {filteredTryoutPackages.map((pkg) => (\n                      <TableRow key={pkg.id}>\n                        <TableCell className=\"font-medium\">{pkg.title}</TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center gap-1\">\n                            <Clock className=\"h-4 w-4\" />\n                            {pkg.duration_minutes} menit\n                          </div>\n                        </TableCell>\n                        <TableCell>{pkg.total_questions} soal</TableCell>\n                        <TableCell>\n                          <Badge className={getStatusColor(pkg.is_active ? 'active' : 'inactive')}>\n                            {pkg.is_active ? 'Active' : 'Inactive'}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center gap-1\">\n                            <Calendar className=\"h-4 w-4\" />\n                            {new Date(pkg.created_at).toLocaleDateString()}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center gap-1\">\n                            <Users className=\"h-4 w-4\" />\n                            Rp {pkg.price.toLocaleString()}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-1\">\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Eye className=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <MoreHorizontal className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Question Dialog */}\n        <Dialog open={isQuestionDialogOpen} onOpenChange={setIsQuestionDialogOpen}>\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle>{editingQuestion ? 'Edit Soal' : 'Tambah Soal Baru'}</DialogTitle>\n            </DialogHeader>\n            <QuestionForm \n              question={editingQuestion} \n              onSubmit={editingQuestion ? \n                (data: QuestionFormData) => handleUpdateQuestion(editingQuestion.id, data) : \n                handleCreateQuestion\n              } \n              onCancel={() => {\n                setIsQuestionDialogOpen(false);\n                setEditingQuestion(null);\n              }} \n            />\n          </DialogContent>\n        </Dialog>\n\n        {/* Tryout Package Dialog */}\n        <Dialog open={isTryoutDialogOpen} onOpenChange={setIsTryoutDialogOpen}>\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle>{editingTryout ? 'Edit Tryout Package' : 'Tambah Tryout Package Baru'}</DialogTitle>\n            </DialogHeader>\n            <TryoutPackageForm \n              tryoutPackage={editingTryout} \n              onSubmit={editingTryout ? \n                (data: TryoutPackageFormData) => handleUpdateTryoutPackage(editingTryout.id, data) : \n                handleCreateTryoutPackage\n              } \n              onCancel={() => {\n                setIsTryoutDialogOpen(false);\n                setEditingTryout(null);\n              }} \n            />\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\n\n// Question Form Component\ninterface QuestionFormProps {\n  question?: Question | null;\n  onSubmit: (data: QuestionFormData) => void;\n  onCancel: () => void;\n}\n\nfunction QuestionForm({ question, onSubmit, onCancel }: QuestionFormProps) {\n  const [formData, setFormData] = useState<QuestionFormData>({\n    question_text: question?.question_text || '',\n    subject: question?.subject || 'TPS',\n    sub_topic: question?.sub_topic || '',\n    difficulty_level: question?.difficulty_level || 'easy',\n    question_type: question?.question_type || 'multiple_choice',\n    options: question?.options || ['', '', '', '', ''],\n    correct_answer: question?.correct_answer || '',\n    explanation: question?.explanation || '',\n    time_limit_seconds: question?.time_limit_seconds || 120\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  const updateOption = (index: number, value: string) => {\n    const newOptions = [...formData.options];\n    newOptions[index] = value;\n    setFormData({ ...formData, options: newOptions });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <Label htmlFor=\"question_text\">Pertanyaan</Label>\n        <Textarea\n          id=\"question_text\"\n          value={formData.question_text}\n          onChange={(e) => setFormData({ ...formData, question_text: e.target.value })}\n          required\n          rows={3}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"subject\">Subject</Label>\n          <Select value={formData.subject} onValueChange={(value) => setFormData({ ...formData, subject: value })}>\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"TPS\">TPS</SelectItem>\n              <SelectItem value=\"Literasi\">Literasi</SelectItem>\n              <SelectItem value=\"Numerasi\">Numerasi</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div>\n          <Label htmlFor=\"sub_topic\">Sub Topic</Label>\n          <Input\n            id=\"sub_topic\"\n            value={formData.sub_topic}\n            onChange={(e) => setFormData({ ...formData, sub_topic: e.target.value })}\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"difficulty_level\">Difficulty</Label>\n          <Select value={formData.difficulty_level} onValueChange={(value) => setFormData({ ...formData, difficulty_level: value })}>\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"easy\">Easy</SelectItem>\n              <SelectItem value=\"medium\">Medium</SelectItem>\n              <SelectItem value=\"hard\">Hard</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div>\n          <Label htmlFor=\"question_type\">Type</Label>\n          <Select value={formData.question_type} onValueChange={(value) => setFormData({ ...formData, question_type: value })}>\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"multiple_choice\">Multiple Choice</SelectItem>\n              <SelectItem value=\"essay\">Essay</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      {formData.question_type === 'multiple_choice' && (\n        <div>\n          <Label>Options</Label>\n          <div className=\"space-y-2\">\n            {formData.options.map((option: string, index: number) => (\n              <div key={index} className=\"flex items-center gap-2\">\n                <span className=\"w-6 text-sm font-medium\">{String.fromCharCode(65 + index)}.</span>\n                <Input\n                  value={option}\n                  onChange={(e) => updateOption(index, e.target.value)}\n                  placeholder={`Option ${String.fromCharCode(65 + index)}`}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div>\n        <Label htmlFor=\"correct_answer\">Correct Answer</Label>\n        <Input\n          id=\"correct_answer\"\n          value={formData.correct_answer}\n          onChange={(e) => setFormData({ ...formData, correct_answer: e.target.value })}\n          placeholder={formData.question_type === 'multiple_choice' ? 'A, B, C, D, or E' : 'Correct answer'}\n          required\n        />\n      </div>\n\n      <div>\n        <Label htmlFor=\"explanation\">Explanation</Label>\n        <Textarea\n          id=\"explanation\"\n          value={formData.explanation}\n          onChange={(e) => setFormData({ ...formData, explanation: e.target.value })}\n          rows={2}\n        />\n      </div>\n\n      <div>\n        <Label htmlFor=\"time_limit_seconds\">Time Limit (seconds)</Label>\n        <Input\n          id=\"time_limit_seconds\"\n          type=\"number\"\n          value={formData.time_limit_seconds}\n          onChange={(e) => setFormData({ ...formData, time_limit_seconds: parseInt(e.target.value) || 120 })}\n          min={30}\n          max={600}\n        />\n      </div>\n\n      <div className=\"flex justify-end gap-2\">\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          <X className=\"h-4 w-4 mr-1\" />\n          Cancel\n        </Button>\n        <Button type=\"submit\">\n          <Save className=\"h-4 w-4 mr-1\" />\n          {question ? 'Update' : 'Create'}\n        </Button>\n      </div>\n    </form>\n  );\n}\n\n// Tryout Package Form Component\ninterface TryoutPackageFormProps {\n  tryoutPackage?: TryoutPackage | null;\n  onSubmit: (data: TryoutPackageFormData) => void;\n  onCancel: () => void;\n}\n\nfunction TryoutPackageForm({ tryoutPackage, onSubmit, onCancel }: TryoutPackageFormProps) {\n  const [formData, setFormData] = useState<TryoutPackageFormData>({\n    title: tryoutPackage?.title || '',\n    description: tryoutPackage?.description || '',\n    category: tryoutPackage?.category || 'SNBT',\n    difficulty_level: tryoutPackage?.difficulty_level || 'medium',\n    duration_minutes: tryoutPackage?.duration_minutes || 180,\n    total_questions: tryoutPackage?.total_questions || 0,\n    price: tryoutPackage?.price || 0,\n    is_active: tryoutPackage?.is_active ?? true\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <Label htmlFor=\"title\">Title</Label>\n        <Input\n          id=\"title\"\n          value={formData.title}\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n          required\n        />\n      </div>\n\n      <div>\n        <Label htmlFor=\"description\">Description</Label>\n        <Textarea\n          id=\"description\"\n          value={formData.description}\n          onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n          rows={3}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Label htmlFor=\"category\">Category</Label>\n          <Select value={formData.category} onValueChange={(value) => setFormData({ ...formData, category: value })}>\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"SNBT\">SNBT</SelectItem>\n              <SelectItem value=\"UTBK\">UTBK</SelectItem>\n              <SelectItem value=\"Simulasi\">Simulasi</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div>\n          <Label htmlFor=\"difficulty_level\">Difficulty</Label>\n          <Select value={formData.difficulty_level} onValueChange={(value) => setFormData({ ...formData, difficulty_level: value })}>\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"easy\">Easy</SelectItem>\n              <SelectItem value=\"medium\">Medium</SelectItem>\n              <SelectItem value=\"hard\">Hard</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-3 gap-4\">\n        <div>\n          <Label htmlFor=\"duration_minutes\">Duration (minutes)</Label>\n          <Input\n            id=\"duration_minutes\"\n            type=\"number\"\n            value={formData.duration_minutes}\n            onChange={(e) => setFormData({ ...formData, duration_minutes: parseInt(e.target.value) || 180 })}\n            min={30}\n            max={300}\n            required\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"total_questions\">Total Questions</Label>\n          <Input\n            id=\"total_questions\"\n            type=\"number\"\n            value={formData.total_questions}\n            onChange={(e) => setFormData({ ...formData, total_questions: parseInt(e.target.value) || 0 })}\n            min={1}\n            max={200}\n            required\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"price\">Price (Rp)</Label>\n          <Input\n            id=\"price\"\n            type=\"number\"\n            value={formData.price}\n            onChange={(e) => setFormData({ ...formData, price: parseInt(e.target.value) || 0 })}\n            min={0}\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <input\n          type=\"checkbox\"\n          id=\"is_active\"\n          checked={formData.is_active}\n          onChange={(e) => setFormData({ ...formData, is_active: e.target.checked })}\n          className=\"rounded\"\n        />\n        <Label htmlFor=\"is_active\">Active</Label>\n      </div>\n\n      <div className=\"flex justify-end gap-2\">\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          <X className=\"h-4 w-4 mr-1\" />\n          Cancel\n        </Button>\n        <Button type=\"submit\">\n          <Save className=\"h-4 w-4 mr-1\" />\n          {tryoutPackage ? 'Update' : 'Create'}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default ContentManagement;"],"names":["ContentManagement","activeTab","setActiveTab","useState","searchQuery","setSearchQuery","filterStatus","setFilterStatus","filterSubject","setFilterSubject","questions","setQuestions","tryoutPackages","setTryoutPackages","isQuestionDialogOpen","setIsQuestionDialogOpen","isTryoutDialogOpen","setIsTryoutDialogOpen","editingQuestion","setEditingQuestion","editingTryout","setEditingTryout","toast","useToast","useEffect","loadQuestions","loadTryoutPackages","async","response","adminService","getQuestions","error","title","description","variant","getTryoutPackages","packages","handleCreateQuestion","data","createQuestion","handleCreateTryoutPackage","createTryoutPackage","filteredQuestions","filter","question","matchesSearch","question_text","toLowerCase","includes","subject","matchesStatus","review_status","matchesSubject","filteredTryoutPackages","pkg","is_active","getStatusColor","status","getDifficultyColor","difficulty","getSubjectColor","jsxs","className","children","jsx","AdminNavigation","Card","CardHeader","CardTitle","Filter","CardContent","Search","Input","placeholder","value","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","size","Upload","Download","Tabs","TabsList","TabsTrigger","TabsContent","FileText","Dialog","open","onOpenChange","DialogTrigger","asChild","Plus","DialogContent","DialogHeader","DialogTitle","QuestionForm","onSubmit","onCancel","Table","TableHeader","TableRow","TableHead","TableBody","map","TableCell","Badge","sub_topic","difficulty_level","question_type","Date","created_at","toLocaleDateString","onClick","Edit","id","confirm","deleteQuestion","handleDeleteQuestion","Trash2","Target","TryoutPackageForm","category","total_questions","duration_minutes","price","toLocaleString","deleteTryoutPackage","handleDeleteTryoutPackage","Clock","Calendar","Users","Eye","MoreHorizontal","updateQuestion","handleUpdateQuestion","tryoutPackage","updateTryoutPackage","handleUpdateTryoutPackage","formData","setFormData","options","correct_answer","explanation","time_limit_seconds","preventDefault","Label","htmlFor","Textarea","required","rows","option","index","String","fromCharCode","newOptions","updateOption","type","parseInt","min","max","X","Save","checked"],"mappings":"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"}