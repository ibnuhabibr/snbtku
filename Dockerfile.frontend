# Build stage
FROM node:20-alpine AS build

# Set working directory
WORKDIR /app

# Install dependencies for build
RUN apk add --no-cache python3 make g++ git

# Copy package files
COPY package*.json ./
COPY bun.lockb ./

# Install dependencies
RUN npm ci --quiet

# Copy project files
COPY . .

# Build the project
RUN npm run build:prod

# Production stage
FROM nginx:alpine AS production

# Copy Nginx configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/conf.d /etc/nginx/conf.d

# Copy built files from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Set proper permissions for nginx
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Create health check endpoint
RUN echo "OK" > /usr/share/nginx/html/health

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
